{"version":3,"sources":["GameScreen.js","logo.svg","Login.js","Profile.js","TopUp.js","CashOut.js","Chat.js","getWeb3.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["game","GameScreen","props","state","this","load","image","spritesheet","frameWidth","frameHeight","bg","add","sprite","displayWidth","window","innerWidth","displayHeight","innerHeight","setOrigin","cloudBack","tileSprite","setScale","tileScaleX","tileScaleY","cloudMid","cloudFront","balloons","anims","create","key","frames","generateFrameNumbers","start","end","frameRate","i","balloon","physics","Math","random","ignoreGravity","setInteractive","push","speedX","speedY","body","allowGravity","setBounce","setAcceleration","setCollideWorldBounds","setGravityY","setVelocity","angularVelocity","angularDrag","on","started","clickBalloon","play","animation","frame","x","y","tilePositionX","nextProps","gameStarted","Phaser","Scene","config","type","AUTO","parent","pixelArt","backgroundColor","width","height","default","arcade","gravity","debug","scene","preload","update","Game","console","log","id","Component","Login","username","password","email","isLogin","isRegister","handleUsername","bind","handlePassword","handleEmail","handleLogin","handleRegister","handleBack","event","setState","target","value","login","register","className","onChange","onClick","Profile","balance","handlePanels","logOut","joinGame","TopUp","amount","handleAmount","style","display","privatekey","handleKey","topUp","CashOut","coinbase","handleAddress","cashOut","Chat","position","left","bottom","textAlign","overflow","overflowWrap","messageList","map","o","color","colors","sender","message","chatMessage","handleChat","onKeyPress","e","sendMessage","getWeb3","Promise","resolve","reject","addEventListener","results","web3","Web3","currentProvider","provider","providers","HttpProvider","serverURL","socket","openSocket","abi","Home","currentUser","sessionId","privateKey","userCount","spent","forcePop","currentPanel","colorIndex","getBalance","handleMessageBox","quitGame","min","max","that","count","msg","alert","success","fontSize","wordBreak","positions","MIDDLE","then","eth","getAccounts","error","accounts","length","localStorage","getItem","cb","k","substr","pKey","privateKeyToAccount","wallet","catch","ceil","floor","fetch","method","headers","JSON","stringify","response","json","data","status","show","err","userhash","utils","soliditySha3","document","location","reload","a","ethers","getDefaultProvider","contract","Contract","PlayerBalances","currentValue","formatEther","Number","toFixed","emit","BOTTOM_RIGHT","mainContract","ethereum","request","account","parseEther","toString","overrides","gasLimit","from","thisObj","methods","deposit","send","res","val","profilePanels","top","borderRadius","margin","padding","right","withAlert","App","Route","exact","path","render","Boolean","hostname","match","ReactDOM","template","AlertTemplate","timeout","offset","transition","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wXAIIA,E,0FCJW,I,uED6KAC,E,kDArKb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXH,KAAM,MAHS,E,2CASnB,WACEI,KAAKC,KAAKC,MAAM,aAAc,2BAE9BF,KAAKC,KAAKE,YAAY,UACpB,2BACA,CAAEC,WAAY,IAAKC,YAAa,MAElCL,KAAKC,KAAKC,MAAM,YAAa,+BAC7BF,KAAKC,KAAKC,MAAM,WAAY,iCAC5BF,KAAKC,KAAKC,MAAM,aAAc,kC,oBAGhC,WAAU,IAAD,OAMHI,EAAKN,KAAKO,IAAIC,OAAO,EAAG,EAAG,cAC/BF,EAAGG,aAAeC,OAAOC,WACzBL,EAAGM,cAAgBF,OAAOG,YAC1BP,EAAGQ,UAAU,EAAG,GAEhBd,KAAKe,UAAYf,KAAKO,IAAIS,WAAWN,OAAOC,WAAa,EAAGD,OAAOG,YAAc,EAAGH,OAAOC,WAAYD,OAAOG,YAAa,aAC3Hb,KAAKe,UAAUE,SAAS,GACxBjB,KAAKe,UAAUG,WAAa,GAC5BlB,KAAKe,UAAUI,WAAa,GAE5BnB,KAAKoB,SAAWpB,KAAKO,IAAIS,WAAWN,OAAOC,WAAa,EAAGD,OAAOG,YAAc,EAAGH,OAAOC,WAAYD,OAAOG,YAAa,YAC1Hb,KAAKoB,SAASH,SAAS,GACvBjB,KAAKoB,SAASF,WAAa,GAC3BlB,KAAKoB,SAASD,WAAa,GAE3BnB,KAAKqB,WAAarB,KAAKO,IAAIS,WAAWN,OAAOC,WAAa,EAAGD,OAAOG,YAAc,EAAGH,OAAOC,WAAYD,OAAOG,YAAa,cAC5Hb,KAAKqB,WAAWJ,SAAS,GACzBjB,KAAKqB,WAAWH,WAAa,GAC7BlB,KAAKqB,WAAWF,WAAa,GAE7B,IAAIG,EAAW,GAEftB,KAAKuB,MAAMC,OAAO,CAChBC,IAAK,OACLC,OAAQ1B,KAAKuB,MAAMI,qBAAqB,UAAW,CAAEC,MAAO,EAAGC,IAAK,IACpEC,UAAW,KAIb9B,KAAKuB,MAAMC,OAAO,CAChBC,IAAK,MACLC,OAAQ1B,KAAKuB,MAAMI,qBAAqB,UAAW,CAAEC,MAAO,EAAGC,IAAK,KACpEC,UAAW,KAIb,IA1CO,eA0CEC,GACP,IAAIC,EAAU,EAAKC,QAAQ1B,IAAIC,OAAO0B,KAAKC,SAAWzB,OAAOC,WAAYD,OAAOG,YAAa,UAAW,CAAEuB,eAAe,IAASC,iBAClIf,EAASgB,KAAKN,GACdV,EAASS,GAAGtB,aAAe,IAC3Ba,EAASS,GAAGnB,cAAgB,IAE5B,IAAI2B,EAAS,IAAsB,IAAhBL,KAAKC,SACpBK,GAAW,GAAK,IAAsB,IAAhBN,KAAKC,UAE/Bb,EAASS,GAAGU,KAAKC,cAAe,EAChCpB,EAASS,GAAGY,UAAU,EAAG,GACzBrB,EAASS,GAAGa,gBAAgB,EAAG,GAC/BtB,EAASS,GAAGc,uBAAsB,GAClCvB,EAASS,GAAGU,KAAKK,YAAY,GAC7BxB,EAASS,GAAGgB,YAAYR,EAAQC,GAChClB,EAASS,GAAGU,KAAKO,gBAAkB,IAAsB,IAAhBd,KAAKC,SAC9Cb,EAASS,GAAGU,KAAKQ,YAAc,EAC/B3B,EAASS,GAAGmB,GAAG,eAAe,WACxBtD,EAAKuD,SACPvD,EAAKwD,eAEP9B,EAASS,GAAGR,MAAM8B,KAAK,OAAO,GAC9B/B,EAASS,GAAGmB,GAAG,qBAAqB,SAACI,EAAWC,GACzB,OAAjBD,EAAU7B,MACZH,EAASS,GAAGyB,EAAItB,KAAKC,SAAWzB,OAAOC,WACvCW,EAASS,GAAG0B,EAAI/C,OAAOG,YACvBS,EAASS,GAAGR,MAAM8B,KAAK,QAAQ,MAEhCrD,UA5BE+B,EAAI,EAAGA,EAlED,EAkEmBA,IAAM,EAA/BA,GA+BT/B,KAAKsB,SAAWA,I,oBAIlB,WACEtB,KAAKe,UAAU2C,eAAiB,IAChC1D,KAAKoB,SAASsC,eAAiB,GAC/B1D,KAAKqB,WAAWqC,eAAiB,IAEjC,IAAK,IAAI3B,EAAI,EAAGA,EA1GD,EA0GmBA,IAAK,CACjC/B,KAAKsB,SAASS,GAAGyB,EAAI,EACvBxD,KAAKsB,SAASS,GAAGyB,EAAI9C,OAAOC,WAErBX,KAAKsB,SAASS,GAAGyB,EAAI9C,OAAOC,aACnCX,KAAKsB,SAASS,GAAGyB,EAAI,GAEnBxD,KAAKsB,SAASS,GAAG0B,EAAI,EACvBzD,KAAKsB,SAASS,GAAG0B,EAAI/C,OAAOG,YAErBb,KAAKsB,SAASS,GAAG0B,EAAI/C,OAAOG,cACnCb,KAAKsB,SAASS,GAAG0B,EAAI,GAEvB,IAAIlB,EAAS,IAAsB,IAAhBL,KAAKC,SACpBK,GAAW,GAAK,IAAsB,IAAhBN,KAAKC,UAC/BnC,KAAKsB,SAASS,GAAGgB,YAAYR,EAAQC,M,uCAKzC,SAA0BmB,GACxB/D,EAAKwD,aAAeO,EAAUP,aAC9BxD,EAAKuD,QAAUQ,EAAUC,c,+BAG3B,WACkB,IAAIC,IAAOC,MAAMlE,GAAjC,IACImE,EAAS,CACXC,KAAMH,IAAOI,KACbC,OAAQ,gBACRC,UAAU,EACVC,gBAAiB,yBACjBC,MAAO3D,OAAOC,WACd2D,OAAQ5D,OAAOG,YACfoB,QAAS,CACPsC,QAAS,SACTC,OAAQ,CACNC,QAAS,CAAEhB,EAAG,KACdiB,OAAO,IAGXC,MAAO,CACLC,QAAS5E,KAAK4E,QACdpD,OAAQxB,KAAKwB,OACbqD,OAAQ7E,KAAK6E,SAGjBjF,EAAO,IAAIiE,IAAOiB,KAAKf,GACvBgB,QAAQC,IAAIpF,GACZA,EAAKwD,aAAepD,KAAKF,MAAMsD,aAC/BxD,EAAKuD,QAAUnD,KAAKF,MAAM8D,c,oBAI5B,WACE,OACE,yBAASqB,GAAG,sB,GAhKOC,aE2FVC,E,kDA9Fb,WAAYrF,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXqF,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,SAAS,EACTC,YAAY,GAEd,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAEnB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,eAAiB,EAAKA,eAAeJ,KAApB,gBACtB,EAAKK,WAAa,EAAKA,WAAWL,KAAhB,gBAfD,E,kDAmBnB,SAAeM,GACbhG,KAAKiG,SAAS,CAAEb,SAAUY,EAAME,OAAOC,U,4BAGzC,SAAeH,GACbhG,KAAKiG,SAAS,CAAEZ,SAAUW,EAAME,OAAOC,U,yBAGzC,SAAYH,GACVhG,KAAKiG,SAAS,CAAEX,MAAOU,EAAME,OAAOC,U,yBAGtC,WACMnG,KAAKD,MAAMwF,QACbvF,KAAKF,MAAMsG,MAAMpG,KAAKD,MAAMqF,SAAUpF,KAAKD,MAAMsF,UAGjDrF,KAAKiG,SAAS,CAAEV,SAAS,M,wBAI7B,WACEvF,KAAKiG,SAAS,CAAEV,SAAS,EAAOC,YAAY,M,4BAG9C,WACMxF,KAAKD,MAAMyF,WACbxF,KAAKF,MAAMuG,SAASrG,KAAKD,MAAMqF,SAAUpF,KAAKD,MAAMuF,MAAOtF,KAAKD,MAAMsF,UAGtErF,KAAKiG,SAAS,CAAET,YAAY,M,oBAKhC,WACE,OACE,sBAAKc,UAAU,QAAf,WACKtG,KAAKD,MAAMwF,SAAWvF,KAAKD,MAAMyF,aAClC,qCACE,yCACA,uBAAOW,MAAOnG,KAAKD,MAAMqF,SAAUmB,SAAUvG,KAAKyF,iBAClD,uBACCzF,KAAKD,MAAMyF,YACV,qCACE,sCACA,uBAAOW,MAAOnG,KAAKD,MAAMuF,MAAOiB,SAAUvG,KAAK4F,cAC/C,0BAGJ,yCACA,uBAAO5B,KAAK,WAAWmC,MAAOnG,KAAKD,MAAMsF,SAAUkB,SAAUvG,KAAK2F,iBAClE,uBAAM,2BAGP3F,KAAKD,MAAMyF,YAAcxF,KAAKD,MAAMwF,UACrC,qCACE,wBAAQe,UAAU,4BAA4BE,QAASxG,KAAK+F,WAA5D,kBACA,qBAAKO,UAAU,gBAGhBtG,KAAKD,MAAMyF,YACZ,qCACE,wBAAQc,UAAU,4BAA4BE,QAASxG,KAAK6F,YAA5D,mBACA,qBAAKS,UAAU,gBAGhBtG,KAAKD,MAAMwF,SACZ,wBAAQe,UAAU,4BAA4BE,QAASxG,KAAK8F,eAA5D,6B,GAxFUZ,aCyBLuB,E,4JAvBb,WAAU,IAAD,OACP,OACE,sBAAKH,UAAU,QAAf,UAEE,yCAAYtG,KAAKF,MAAMsF,SAAvB,OACA,iDACA,+BAAKpF,KAAKF,MAAM4G,QAAhB,UAEA,wBAAQF,QAAS,kBAAM,EAAK1G,MAAM6G,aAAa,IAAIL,UAAU,4BAA7D,oBACA,qBAAKA,UAAU,YACdtG,KAAKF,MAAM4G,QAAU,GACpB,wBAAQF,QAAS,kBAAM,EAAK1G,MAAM6G,aAAa,IAAIL,UAAU,4BAA7D,sBAEF,uBAAM,uBAAM,uBAAM,uBAClB,wBAAQE,QAASxG,KAAKF,MAAM8G,OAAQN,UAAU,4BAA9C,kBACA,qBAAKA,UAAU,YACf,wBAAQE,QAASxG,KAAKF,MAAM+G,SAAUP,UAAU,4BAAhD,8B,GAjBcpB,aCwBP4B,E,4JAvBb,WAAU,IAAD,OACP,OACE,sBAAKR,UAAU,QAAf,UAEE,yCAAYtG,KAAKF,MAAMsF,SAAvB,OACA,kDAAqBpF,KAAKF,MAAM4G,WAChC,uBAAK,uBACL,uCACA,uBAAOP,MAAOnG,KAAKF,MAAMiH,OAAQR,SAAUvG,KAAKF,MAAMkH,aAAchD,KAAK,WACzE,uBAAK,uBACL,mBAAGiD,MAAO,CAACC,QAAS,QAApB,yBACA,uBAAOf,MAAOnG,KAAKF,MAAMqH,WAAYZ,SAAUvG,KAAKF,MAAMsH,UAAWH,MAAO,CAAC5C,MAAO,OAAO6C,QAAS,UACpG,uBAAK,uBACL,wBAAQV,QAAS,kBAAM,EAAK1G,MAAM6G,aAAa,IAAIL,UAAU,4BAA7D,kBACA,qBAAKA,UAAU,YACf,wBAAQE,QAASxG,KAAKF,MAAMuH,MAAOf,UAAU,4BAA7C,oBACA,uBAAK,8B,GAjBOpB,aCwBLoC,E,4JAvBb,WAAU,IAAD,OACP,OACE,sBAAKhB,UAAU,QAAf,UAEE,yCAAYtG,KAAKF,MAAMsF,SAAvB,OACA,kDAAqBpF,KAAKF,MAAM4G,WAChC,uBAAK,uBACL,uCACA,uBAAOP,MAAOnG,KAAKF,MAAMiH,OAAQR,SAAUvG,KAAKF,MAAMkH,aAAchD,KAAK,WACzE,uBAAK,uBACL,kDACA,uBAAOmC,MAAOnG,KAAKF,MAAMyH,SAAUhB,SAAUvG,KAAKF,MAAM0H,gBACxD,uBAAK,uBACL,wBAAQhB,QAAS,kBAAM,EAAK1G,MAAM6G,aAAa,IAAIL,UAAU,4BAA7D,kBACA,qBAAKA,UAAU,YACf,wBAAQE,QAASxG,KAAKF,MAAM2H,QAASnB,UAAU,4BAA/C,sBACA,uBAAK,8B,GAjBSpB,aCmBPwC,E,4JAlBb,WAAU,IAAD,OACP,OACE,sBAAKpB,UAAU,OAAOW,MAAO,CAACU,SAAU,WAAYC,KAAM,MAAOC,OAAQ,MAAOzD,gBAAiB,YAAaC,MAAO,SAArH,UAEE,qBAAK4C,MAAO,CAAC3C,OAAQ,QAASwD,UAAW,OAAQC,SAAU,OAAQC,aAAc,cAAjF,SACChI,KAAKF,MAAMmI,YAAYC,KAAI,SAACC,GAAO,OAAO,oBAAGlB,MAAO,CAAEmB,MAAO,EAAKtI,MAAMuI,OAAOF,EAAEC,QAAvC,UAAiDD,EAAEG,OAAnD,KAA6DH,EAAEI,gBAE1G,uBACApC,MAAOnG,KAAKF,MAAM0I,YAClBjC,SAAUvG,KAAKF,MAAM2I,WACrBC,WAAa,SAACC,GAAoB,UAAVA,EAAElH,KAAiB,EAAK3B,MAAM8I,eACtD3B,MAAO,CAACU,SAAU,WAAYE,OAAQ,MAAOxD,MAAO,gB,GAZzCa,a,kBCsBJ2D,EAxBD,IAAIC,SAAQ,SAASC,EAASC,GAE1CtI,OAAOuI,iBAAiB,QAAQ,WAC9B,IAAIC,EAAU,GACVC,EAAOzI,OAAOyI,KAGlB,GAAoB,qBAATA,EAETA,EAAO,IAAIC,IAAKD,EAAKE,iBACrBH,EAAQC,KAAOA,EACfpE,QAAQC,IAAI,2BACZ+D,EAAQG,OACH,CAEL,IAAII,EAAW,IAAIF,IAAKG,UAAUC,aAAa,iDAC/CL,EAAO,IAAIC,IAAKE,GAChBJ,EAAQC,KAAOA,EACfpE,QAAQC,IAAI,gDACZ+D,EAAQG,U,iBCRRO,EAAY,6BACZC,E,MAASC,GAAWF,GAGpBG,EAAM,CAAC,CAAE,UAAY,EAAO,OAAU,CAAC,CAAE,KAAQ,SAAU,KAAQ,WAAa,CAAE,KAAQ,OAAQ,KAAQ,WAAa,CAAE,KAAQ,cAAe,KAAQ,WAAa,CAAE,KAAQ,aAAc,KAAQ,YAAc,KAAQ,WAAY,QAAW,CAAC,CAAE,KAAQ,UAAW,KAAQ,SAAW,SAAW,EAAO,gBAAmB,aAAc,KAAQ,YAAc,CAAE,UAAY,EAAM,OAAU,CAAC,CAAE,KAAQ,GAAI,KAAQ,YAAc,KAAQ,iBAAkB,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,YAAc,SAAW,EAAO,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,UAAY,EAAO,OAAU,CAAC,CAAE,KAAQ,SAAU,KAAQ,YAAc,KAAQ,cAAe,QAAW,CAAC,CAAE,KAAQ,UAAW,KAAQ,SAAW,SAAW,EAAO,gBAAmB,aAAc,KAAQ,YAAc,CAAE,UAAY,EAAO,OAAU,CAAC,CAAE,KAAQ,OAAQ,KAAQ,YAAc,KAAQ,UAAW,QAAW,CAAC,CAAE,KAAQ,UAAW,KAAQ,SAAW,SAAW,EAAM,gBAAmB,UAAW,KAAQ,YAAc,CAAE,UAAY,EAAM,OAAU,GAAI,KAAQ,QAAS,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,YAAc,SAAW,EAAO,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,SAAW,EAAM,gBAAmB,UAAW,KAAQ,gBAEntCvB,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,W,IAQ3NwB,E,kDACJ,WAAY/J,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXoJ,KAAM,KACNW,YAAa,GACb1E,SAAU,GACVC,SAAU,GACV0E,UAAW,GACXxC,SAAU,GACVyC,WAAY,GACZvI,IAAK,KACLwI,UAAW,EACXvD,QAAS,EACTwD,MAAO,EACPtG,aAAa,EACbuG,UAAU,EACVC,aAAc,EACdrD,OAAQ,EACRkB,YAAa,CAAC,CAAEK,OAAQ,KAAMC,QAAS,6BACvCC,YAAa,GACb6B,WAAY,GAGd,EAAKjE,MAAQ,EAAKA,MAAMV,KAAX,gBACb,EAAKkB,OAAS,EAAKA,OAAOlB,KAAZ,gBACd,EAAKW,SAAW,EAAKA,SAASX,KAAd,gBAChB,EAAK4E,WAAa,EAAKA,WAAW5E,KAAhB,gBAClB,EAAKiB,aAAe,EAAKA,aAAajB,KAAlB,gBACpB,EAAK0B,UAAY,EAAKA,UAAU1B,KAAf,gBACjB,EAAKsB,aAAe,EAAKA,aAAatB,KAAlB,gBACpB,EAAK8B,cAAgB,EAAKA,cAAc9B,KAAnB,gBACrB,EAAK6E,iBAAmB,EAAKA,iBAAiB7E,KAAtB,gBACxB,EAAKmB,SAAW,EAAKA,SAASnB,KAAd,gBAChB,EAAK8E,SAAW,EAAKA,SAAS9E,KAAd,gBAChB,EAAKkD,YAAc,EAAKA,YAAYlD,KAAjB,gBACnB,EAAK2B,MAAQ,EAAKA,MAAM3B,KAAX,gBACb,EAAK+B,QAAU,EAAKA,QAAQ/B,KAAb,gBACf,EAAKtC,aAAe,EAAKA,aAAasC,KAAlB,gBArCH,E,qDAwCnB,WAAqB,IA/CD+E,EAAKC,EA+CL,OACdC,EAAO3K,KAEX0J,EAAOxG,GAAG,WAAW,WACnB6B,QAAQC,IAAI,aACZ2F,EAAK1E,SAAS,CAAE8D,UAAWL,EAAOzE,QAEpCyE,EAAOxG,GAAG,OAAO,SAAAqF,GACfxD,QAAQC,IAAIuD,GACZoC,EAAK1E,SAAS,CAAEgE,UAAW1B,EAAQqC,WAErClB,EAAOxG,GAAG,OAAO,SAAAqF,GACfxD,QAAQC,IAAIuD,GACZoC,EAAK1E,SAAS,CAAEkE,UAAU,OAE5BT,EAAOxG,GAAG,gBAAgB,SAAAqF,GACxBxD,QAAQC,IAAIuD,GACZoC,EAAKL,gBAEPZ,EAAOxG,GAAG,QAAQ,SAAAqF,GAChB,GAAwB,WAApBA,EAAQA,QAAZ,CAMA,IAAIsC,EAAMF,EAAK5K,MAAMkI,YACrB4C,EAAIvI,KAAK,CAAEgG,OAAQC,EAAQD,OAAQC,QAASA,EAAQA,QAASH,MAAOG,EAAQH,QAC5EuC,EAAK1E,SAAS,CAAEgC,YAAa4C,SAP3B,EAAK/K,MAAMgL,MAAMC,QAAQ,sBAAK9D,MAAO,CAAC+D,SAAU,QAAQC,UAAW,aAA1C,UAAyD1C,EAAQD,OAAjE,gBAA0F,CACjHX,SAAUuD,IAAUC,YAS1BtC,EAAQuC,MAAK,SAAAlC,GACX,EAAKjD,SAAS,CAAEkD,KAAMD,EAAQC,OAE9BD,EAAQC,KAAKkC,IAAIC,aAAY,SAACC,EAAOC,GAInC,GAHIA,GAA+B,GAAnBA,EAASC,QACvB,EAAKxF,SAAS,CAAEsB,SAAUiE,EAAS,KAEjCE,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,iBAAiBF,OAAS,GAAI,CAC9F,IAAIG,EAAKF,aAAaC,QAAQ,iBAC1BE,EAAIH,aAAaC,QAAQ,cACzBE,EAAEJ,OAAS,KACbI,EAAIA,EAAEC,OAAO,EAAGD,EAAEJ,OAAS,IAE7B,EAAKxF,SAAS,CAAEsB,SAAUqE,EAAIG,KAAMF,IACpC,IAAIrI,EAAI0F,EAAQC,KAAKkC,IAAIG,SAASQ,oBAAoBN,aAAaC,QAAQ,eAE3E5G,QAAQC,IAAIxB,GACZuB,QAAQC,IAAIkE,EAAQC,KAAKkC,IAAIG,SAASS,YAEvCC,OAAM,WAAQnH,QAAQC,IAAI,6BAG/BhF,KAAKiG,SAAS,CAAEoE,YApGEI,EAoGuB,EApGlBC,EAoGqBrC,EAAOoD,OAnGrDhB,EAAMvI,KAAKiK,KAAK1B,GAChBC,EAAMxI,KAAKkK,MAAM1B,GACVxI,KAAKkK,MAAMlK,KAAKC,UAAYuI,EAAMD,GAAOA,Q,sBAoGhD,SAASrF,EAAUE,EAAOD,GAAW,IAAD,OAClCN,QAAQC,IAAI,kBACZqH,MAAM5C,EAAY,YAChB,CACE6C,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElB9J,KAAM+J,KAAKC,UAAU,CACnB,SAAYrH,EACZ,MAASE,EACT,SAAYD,MAEb+F,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC5BvB,MAAK,SAAAwB,GACe,MAAfA,EAAKC,OACP,EAAK/M,MAAMgL,MAAMgC,KAAKF,EAAKC,QAG3B,EAAKzG,MAAMhB,EAAUC,MAEtB6G,OAAM,SAAUa,GACjBhI,QAAQC,IAAI+H,Q,mBAIlB,SAAM3H,EAAUC,GAAW,IAAD,OACxBgH,MAAM5C,EAAY,SAChB,CACE6C,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAGlB9J,KAAM+J,KAAKC,UAAU,CACnB,SAAYrH,EACZ,SAAYC,EACZ,UAAarF,KAAKD,MAAMgK,cAEzBqB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC5BvB,MAAK,SAAAwB,GACJ,GAAmB,MAAfA,EAAKC,OACP,EAAK/M,MAAMgL,MAAMgC,KAAKF,EAAKC,YAExB,CACH,IAAIG,EAAW,EAAKjN,MAAMoJ,KAAK8D,MAAMC,aAAa9H,GAClD,EAAKa,SAAS,CAAE6D,YAAakD,EAAU5H,SAAUA,EAAUC,SAAUA,IAAY,WAC/ErF,KAAKsK,oBAGR4B,OAAM,SAAUa,GACjBhI,QAAQC,IAAI+H,Q,oBAIlB,WACEI,SAASC,SAASC,W,+DAGpB,uCAAAC,EAAA,6DACMhE,EAAWiE,IAAOC,mBAAmB,WACrCC,EAAW,IAAIF,IAAOG,SAAS,6CAA8C9D,EAAKN,GAFxF,SAG2BmE,EAASE,eAAe3N,KAAKD,MAAM+J,aAH9D,OAGM8D,EAHN,OAIE7I,QAAQC,IAA6C,IAAzCuI,IAAON,MAAMY,YAAYD,IACrC5N,KAAKiG,SAAS,CAAES,QAASoH,QAAiD,IAAzCP,IAAON,MAAMY,YAAYD,IAAuBG,QAAQ,MAEzF1B,MAAM5C,EAAY,YAChB,CACE6C,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElB9J,KAAM+J,KAAKC,UAAU,CACnB,SAAYzM,KAAKD,MAAM+J,YACvB,UAAa9J,KAAKD,MAAMgK,cAEzBqB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC5BvB,MAAK,SAAAwB,GACe,MAAfA,EAAKC,OACP9H,QAAQC,IAAI4H,EAAKC,SAGjB9H,QAAQC,IAAI4H,EAAK1C,OACjB,EAAKjE,SAAS,CAAEiE,MAAO4D,OAAOlB,EAAK1C,aAEpCgC,OAAM,SAAUa,GACjBhI,QAAQC,IAAI+H,MA5BlB,gD,gFAiCA,WAAgB,IAAD,OACbhI,QAAQC,IAAI,WACZqH,MAAM5C,EAAY,SAChB,CACE6C,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElB9J,KAAM+J,KAAKC,UAAU,CACnB,SAAYzM,KAAKD,MAAM+J,YACvB,IAAO9J,KAAKD,MAAM0B,IAClB,UAAazB,KAAKD,MAAMgK,cAEzBqB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC5BvB,MAAK,SAAAwB,GACe,UAAfA,EAAKC,QACP,EAAK/M,MAAMgL,MAAMC,QAAQ,qBAAK9D,MAAO,CAAC+D,SAAU,OAAvB,kBAA0C,CACjErD,SAAUuD,IAAUC,SAEtB,EAAKlF,SAAS,CAAEiE,MAAO,EAAKnK,MAAMmK,MAAQ,MAC1CR,EAAOsE,KAAK,OAAQ,CAAE1F,OAAQ,EAAKvI,MAAMqF,SAAUmD,QAAS,YAEtC,SAAfqE,EAAKC,QACZ,EAAK/M,MAAMgL,MAAMgC,KAAK,MAAM,CAC1BnF,SAAUuD,IAAU+C,eAEtB,EAAKhI,SAAS,CAAEiE,MAAO,EAAKnK,MAAMmK,MAAQ,MAG1C,EAAKpK,MAAMgL,MAAMgC,KAAKF,EAAKC,WAE5BX,OAAM,SAAUa,GACjBhI,QAAQC,IAAI+H,Q,sBAIlB,WAAY,IAAD,OACTV,MAAM5C,EAAY,YAChB,CACE6C,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElB9J,KAAM+J,KAAKC,UAAU,CACnB,SAAYzM,KAAKD,MAAM+J,YACvB,IAAO9J,KAAKD,MAAM0B,IAClB,UAAazB,KAAKD,MAAMgK,cAGzBqB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC5BvB,MAAK,SAAAwB,GACe,MAAfA,EAAKC,OACP,EAAK/M,MAAMgL,MAAMgC,KAAKF,EAAKC,QAG3B,EAAK5G,SAAS,CAAExE,IAAKmL,EAAKnL,IAAKmC,aAAa,OAE7CsI,OAAM,SAAUa,GACjBhI,QAAQC,IAAI+H,Q,0DAIlB,oCAAAO,EAAA,6DAGMY,EAAe,IAAIlO,KAAKD,MAAMoJ,KAAKkC,IAAIqC,SAAS9D,EAAK,8CAH3D,SAIsBlJ,OAAOyN,SAASC,QAAQ,CAAE9B,OAAQ,wBAJxD,cAIM+B,EAJN,gBAKsB3N,OAAOyN,SAASC,QAAQ,CAAE9B,OAAQ,gBALxD,UAMiB,GANjB,+BAOItM,KAAKF,MAAMgL,MAAMS,MAAM,iBAP3B,kCAUMxE,EAASwG,IAAON,MAAMqB,WAAWtO,KAAKD,MAAMgH,QAAQwH,WACpDC,EAAY,CACdC,SAAU,KACVC,KAAML,EAAQ,GACdlI,MAAOY,GAEL4H,EAAU3O,KACdkO,EAAaU,QAAQC,QAAQ7O,KAAKD,MAAM+J,aAAagF,KAAKN,GAAWtL,GAAG,mBAAmB,WACzFyL,EAAQ7O,MAAMgL,MAAMgC,KAAK,4BACzB6B,EAAQ1I,SAAS,CAAEmE,aAAc,OAEhClH,GAAG,WAAW,SAAC6L,GACdJ,EAAQ7O,MAAMgL,MAAMgC,KAAK,qBACzB6B,EAAQrE,gBAvBd,oE,2EA4BA,WAAW,IAAD,OACR+B,MAAM5C,EAAY,YAChB,CACE6C,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElB9J,KAAM+J,KAAKC,UAAU,CACnB,IAAOzM,KAAKD,MAAM0B,IAClB,SAAYzB,KAAKD,MAAM+J,YACvB,SAAY9J,KAAKD,MAAMsF,SACvB,QAAWrF,KAAKD,MAAMwH,SACtB,UAAavH,KAAKD,MAAMgK,UACxB,OAAU/J,KAAKD,MAAMgH,WAEtBqE,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC5BvB,MAAK,SAAAwB,GACe,MAAfA,EAAKC,OACP,EAAK/M,MAAMgL,MAAMgC,KAAKF,EAAKC,SAG3B,EAAK/M,MAAMgL,MAAMgC,KAAK,wBACtB,EAAK7G,SAAS,CAAEmE,aAAc,QAE/B8B,OAAM,SAAUa,GACjBhI,QAAQC,IAAI+H,Q,sBAIlB,WAAY,IAAD,OACTV,MAAM5C,EAAY,YAChB,CACE6C,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElB9J,KAAM+J,KAAKC,UAAU,CACnB,SAAYzM,KAAKD,MAAM+J,YACvB,IAAO9J,KAAKD,MAAM0B,IAClB,UAAazB,KAAKD,MAAMgK,cAEzBqB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC5BvB,MAAK,SAAAwB,GACe,MAAfA,EAAKC,OACP,EAAK/M,MAAMgL,MAAMgC,KAAKF,EAAKC,SAG3B,EAAK5G,SAAS,CAAErC,aAAa,IAC7B,EAAK0G,iBAEN4B,OAAM,SAAUa,GACjBhI,QAAQC,IAAI+H,Q,yBAIlB,WACE,IAAIzE,EAAiC,IAAvBtI,KAAKD,MAAMqF,SAAiB,QAAUpF,KAAKD,MAAMqF,SAC/DsE,EAAOsE,KAAK,OAAQ,CAAE1F,OAAQA,EAAQC,QAASvI,KAAKD,MAAMyI,YAAaJ,MAAOpI,KAAKD,MAAMsK,aACzFrK,KAAKiG,SAAS,CAAEuC,YAAa,O,8BAG/B,SAAiBxC,GACfhG,KAAKiG,SAAS,CAAEuC,YAAaxC,EAAME,OAAOC,U,0BAG5C,SAAa6I,GACXhP,KAAKiG,SAAS,CAAEmE,aAAc4E,M,uBAGhC,SAAUhJ,GACRhG,KAAKiG,SAAS,CAAE+D,WAAYhE,EAAME,OAAOC,U,0BAG3C,SAAaH,GACXhG,KAAKiG,SAAS,CAAEc,OAAQf,EAAME,OAAOC,U,2BAGvC,SAAcH,GACZhG,KAAKiG,SAAS,CAAEsB,SAAUvB,EAAME,OAAOC,U,oBAGzC,WACE,IAAM8I,EAAgB,CACpB,cAAC,EAAD,CACEpI,SAAU7G,KAAK6G,SACfD,OAAQ5G,KAAK4G,OACbxB,SAAUpF,KAAKD,MAAMqF,SACrBsB,QAAS1G,KAAKD,MAAM2G,QAAU1G,KAAKD,MAAMmK,MACzCvD,aAAc3G,KAAK2G,eAErB,cAAC,EAAD,CACEE,SAAU7G,KAAK6G,SACfzB,SAAUpF,KAAKD,MAAMqF,SACrBsB,QAAS1G,KAAKD,MAAM2G,QAAU1G,KAAKD,MAAMmK,MACzCvD,aAAc3G,KAAK2G,aACnBK,aAAchH,KAAKgH,aACnBD,OAAQ/G,KAAKD,MAAMgH,OACnBiD,WAAYhK,KAAKD,MAAMiK,WACvB5C,UAAWpH,KAAKoH,UAChBC,MAAOrH,KAAKqH,QAEd,cAAC,EAAD,CACER,SAAU7G,KAAK6G,SACfzB,SAAUpF,KAAKD,MAAMqF,SACrBsB,QAAS1G,KAAKD,MAAM2G,QAAU1G,KAAKD,MAAMmK,MACzCvD,aAAc3G,KAAK2G,aACnBY,SAAUvH,KAAKD,MAAMwH,SACrBP,aAAchH,KAAKgH,aACnBQ,cAAexH,KAAKwH,cACpBT,OAAQ/G,KAAKD,MAAMgH,OACnBU,QAASzH,KAAKyH,WAGlB,OACE,sBAAKnB,UAAU,OAAf,UACE,sBAAKA,UAAU,QAAf,UACE,8CAC2B,IAA1BtG,KAAKD,MAAM+J,YAAoB,cAAC,EAAD,CAAO1D,MAAOpG,KAAKoG,MAAOC,SAAUrG,KAAKqG,WAAerG,KAAKD,MAAM6D,YAAc,KAAOqL,EAAcjP,KAAKD,MAAMqK,iBAEnJ,cAAC,EAAD,CAAYH,UAAWjK,KAAKD,MAAMkK,UAAW7G,aAAcpD,KAAKoD,aAAcQ,YAAa5D,KAAKD,MAAM6D,cACtG,sBAAKqD,MAAO,CAAEU,SAAU,WAAYC,KAAM,MAAOsH,IAAK,MAAO9K,gBAAiB,YAAa+K,aAAc,MAAOC,OAAQ,OAAQhH,MAAO,QAASiH,QAAS,OAAzJ,UACE,6BAAKrP,KAAKD,MAAMkK,YADlB,aAGA,sBAAKhD,MAAO,CAAEU,SAAU,WAAY2H,MAAO,MAAOJ,IAAK,MAAO9K,gBAAiB,YAAa+K,aAAc,MAAOC,OAAQ,OAAQhH,MAAO,QAASiH,QAAS,OAA1J,oBAEA,6BAAKrP,KAAKD,MAAM2G,QAAU1G,KAAKD,MAAMmK,WACpClK,KAAKD,MAAM6D,YACV,qBAAK4C,QAASxG,KAAKwK,SAAUvD,MAAO,CAAEU,SAAU,WAAY2H,MAAO,MAAOzH,OAAQ,MAAOzD,gBAAiB,YAAa+K,aAAc,MAAOC,OAAQ,OAAQhH,MAAO,QAASiH,QAAS,OAArL,uBAEE,KAEFrP,KAAKD,MAAM6D,aACX,cAAC,EAAD,CAAMqE,YAAajI,KAAKD,MAAMkI,YAAaO,YAAaxI,KAAKD,MAAMyI,YAAaC,WAAYzI,KAAKuK,iBAAkB3B,YAAa5I,KAAK4I,YAAaP,OAAQA,W,GAjajJnD,aAwaJqK,gBAAY1F,GC3aZ2F,E,4JAhBb,WACE,OACE,qBAAKlJ,UAAU,MAAf,SACA,cAAC,IAAD,UACA,gCACE,cAACmJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAC9P,GAAD,OAAW,cAAC,EAAD,eAAUA,OAEnD,cAAC2P,EAAA,EAAD,CAAOE,KAAK,YAAYC,OAAQ,SAAC9P,GAAD,OAAW,cAAC,EAAD,eAAgBA,kB,GARjDoF,a,SCKE2K,QACW,cAA7BnP,OAAO0M,SAAS0C,UAEe,UAA7BpP,OAAO0M,SAAS0C,UAEhBpP,OAAO0M,SAAS0C,SAASC,MACvB,2DCHNC,IAASJ,OAAO,cAAC,IAAD,yBAAeK,SAAUC,KAPzB,CACdvI,SAAU,gBACVwI,QAAS,IACTC,OAAQ,OACRC,WAAY,UAGE,aAAqD,cAAC,EAAD,OAAyBlD,SAASmD,eAAe,SDkHhH,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrF,MAAK,SAAAsF,GACjCA,EAAaC,kB","file":"static/js/main.9314823b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Phaser from 'phaser';\r\nimport './App.css';\r\n\r\nvar game;\r\nvar balloonCount = 3;\r\n\r\nclass GameScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      game: null,\r\n    }\r\n\r\n    //this.create = this.create.bind(this);\r\n  }\r\n\r\n  preload() {\r\n    this.load.image('background', './phaser/Background.png');\r\n    //this.load.image('balloon', './phaser/Balloon Pop.png');\r\n    this.load.spritesheet('balloon',\r\n      './phaser/Balloon Pop.png',\r\n      { frameWidth: 390, frameHeight: 481 }\r\n    );\r\n    this.load.image('cloudBack', './phaser/Clouds_03_Back.png');\r\n    this.load.image('cloudMid', './phaser/Clouds_02_Middle.png');\r\n    this.load.image('cloudFront', './phaser/Clouds_01_Front.png');\r\n  }\r\n\r\n  create() {\r\n    //console.log(game);\r\n    //game.stage.backgroundColor = \"#4488AA\";\r\n\r\n\r\n\r\n    let bg = this.add.sprite(0, 0, 'background');\r\n    bg.displayWidth = window.innerWidth;\r\n    bg.displayHeight = window.innerHeight;\r\n    bg.setOrigin(0, 0);\r\n\r\n    this.cloudBack = this.add.tileSprite(window.innerWidth / 2, window.innerHeight / 2, window.innerWidth, window.innerHeight, 'cloudBack');\r\n    this.cloudBack.setScale(1);\r\n    this.cloudBack.tileScaleX = 0.5;\r\n    this.cloudBack.tileScaleY = 0.6;\r\n\r\n    this.cloudMid = this.add.tileSprite(window.innerWidth / 2, window.innerHeight / 2, window.innerWidth, window.innerHeight, 'cloudMid');\r\n    this.cloudMid.setScale(1);\r\n    this.cloudMid.tileScaleX = 0.5;\r\n    this.cloudMid.tileScaleY = 0.6;\r\n\r\n    this.cloudFront = this.add.tileSprite(window.innerWidth / 2, window.innerHeight / 2, window.innerWidth, window.innerHeight, 'cloudFront');\r\n    this.cloudFront.setScale(1);\r\n    this.cloudFront.tileScaleX = 0.5;\r\n    this.cloudFront.tileScaleY = 0.6;\r\n\r\n    let balloons = [];\r\n\r\n    this.anims.create({\r\n      key: 'idle',\r\n      frames: this.anims.generateFrameNumbers('balloon', { start: 0, end: 0 }),\r\n      frameRate: 64\r\n      //repeat: -1\r\n    });\r\n\r\n    this.anims.create({\r\n      key: 'pop',\r\n      frames: this.anims.generateFrameNumbers('balloon', { start: 0, end: 16 }),\r\n      frameRate: 96\r\n      //repeat: -1\r\n    });\r\n\r\n    for (let i = 0; i < balloonCount; i++) {\r\n      let balloon = this.physics.add.sprite(Math.random() * window.innerWidth, window.innerHeight, 'balloon', { ignoreGravity: false }).setInteractive();\r\n      balloons.push(balloon);\r\n      balloons[i].displayWidth = 140;\r\n      balloons[i].displayHeight = 200;\r\n\r\n      let speedX = 400 + Math.random() * 200;\r\n      let speedY = - 1 * (300 + Math.random() * 200);\r\n      // balloons[i].body.maxVelocity = { x: speedX, y: speedY };\r\n      balloons[i].body.allowGravity = false;\r\n      balloons[i].setBounce(0, 0);\r\n      balloons[i].setAcceleration(0, 0);\r\n      balloons[i].setCollideWorldBounds(false);\r\n      balloons[i].body.setGravityY(0);\r\n      balloons[i].setVelocity(speedX, speedY);\r\n      balloons[i].body.angularVelocity = 250 + Math.random() * 100;\r\n      balloons[i].body.angularDrag = 0;\r\n      balloons[i].on('pointerdown', function () {\r\n        if (game.started) {\r\n          game.clickBalloon();\r\n        }\r\n        balloons[i].anims.play(\"pop\", true);\r\n        balloons[i].on('animationcomplete', (animation, frame) => {\r\n          if (animation.key == \"pop\") {\r\n            balloons[i].x = Math.random() * window.innerWidth;\r\n            balloons[i].y = window.innerHeight;\r\n            balloons[i].anims.play(\"idle\", true);\r\n          }\r\n        }, this);\r\n      });\r\n    }\r\n    this.balloons = balloons;\r\n  }\r\n\r\n\r\n  update() {\r\n    this.cloudBack.tilePositionX -= 0.15;\r\n    this.cloudMid.tilePositionX += 0.3;\r\n    this.cloudFront.tilePositionX -= 0.75;\r\n\r\n    for (let i = 0; i < balloonCount; i++) {\r\n      if (this.balloons[i].x < 0) {\r\n        this.balloons[i].x = window.innerWidth;\r\n      }\r\n      else if (this.balloons[i].x > window.innerWidth) {\r\n        this.balloons[i].x = 0;\r\n      }\r\n      if (this.balloons[i].y < 0) {\r\n        this.balloons[i].y = window.innerHeight;\r\n      }\r\n      else if (this.balloons[i].y > window.innerHeight) {\r\n        this.balloons[i].y = 0;\r\n      }\r\n      let speedX = 200 + Math.random() * 200;\r\n      let speedY = - 1 * (150 + Math.random() * 200);\r\n      this.balloons[i].setVelocity(speedX, speedY);\r\n    }\r\n  }\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    game.clickBalloon = nextProps.clickBalloon;\r\n    game.started = nextProps.gameStarted;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let gameScene = new Phaser.Scene(game);\r\n    var config = {\r\n      type: Phaser.AUTO,\r\n      parent: 'phaser-parent',\r\n      pixelArt: false,\r\n      backgroundColor: 'rgba(176, 55, 110,0.5)',\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n          gravity: { y: 200 },\r\n          debug: false\r\n        }\r\n      },\r\n      scene: {\r\n        preload: this.preload,\r\n        create: this.create,\r\n        update: this.update\r\n      }\r\n    };\r\n    game = new Phaser.Game(config);\r\n    console.log(game)\r\n    game.clickBalloon = this.props.clickBalloon;\r\n    game.started = this.props.gameStarted;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"phaser-parent\">\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameScreen;\r\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      email: \"\",\r\n      isLogin: false,\r\n      isRegister: false,\r\n    };\r\n    this.handleUsername = this.handleUsername.bind(this);\r\n    this.handlePassword = this.handlePassword.bind(this);\r\n    this.handleEmail = this.handleEmail.bind(this);\r\n\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n    //this.create = this.create.bind(this);\r\n  }\r\n\r\n  handleUsername(event) {\r\n    this.setState({ username: event.target.value })\r\n  }\r\n\r\n  handlePassword(event) {\r\n    this.setState({ password: event.target.value })\r\n  }\r\n\r\n  handleEmail(event) {\r\n    this.setState({ email: event.target.value })\r\n  }\r\n\r\n  handleLogin() {\r\n    if (this.state.isLogin) {\r\n      this.props.login(this.state.username, this.state.password);\r\n    }\r\n    else {\r\n      this.setState({ isLogin: true });\r\n    }\r\n  }\r\n\r\n  handleBack() {\r\n    this.setState({ isLogin: false, isRegister: false });\r\n  }\r\n\r\n  handleRegister() {\r\n    if (this.state.isRegister) {\r\n      this.props.register(this.state.username, this.state.email, this.state.password);\r\n    }\r\n    else {\r\n      this.setState({ isRegister: true });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        { (this.state.isLogin || this.state.isRegister) &&\r\n          <>\r\n            <p>Username</p>\r\n            <input value={this.state.username} onChange={this.handleUsername} />\r\n            <br />\r\n            {this.state.isRegister && (\r\n              <>\r\n                <p>Email</p>\r\n                <input value={this.state.email} onChange={this.handleEmail} />\r\n                <br />\r\n              </>)\r\n            }\r\n            <p>Password</p>\r\n            <input type=\"password\" value={this.state.password} onChange={this.handlePassword} />\r\n            <br /><br />\r\n          </>\r\n        }\r\n        { (this.state.isRegister || this.state.isLogin) &&\r\n          <>\r\n            <button className=\"midnight-blue-flat-button\" onClick={this.handleBack}>BACK</button>\r\n            <div className=\"divider\" />\r\n          </>\r\n        }\r\n        { !this.state.isRegister &&\r\n          <>\r\n            <button className=\"midnight-blue-flat-button\" onClick={this.handleLogin}>LOGIN</button>\r\n            <div className=\"divider\" />\r\n          </>\r\n        }\r\n        { !this.state.isLogin &&\r\n          <button className=\"midnight-blue-flat-button\" onClick={this.handleRegister}>REGISTER</button>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass Profile extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n\r\n        <p>Welcome {this.props.username}!</p>\r\n        <p>Current Balance:</p>\r\n        <h2>{this.props.balance}uETH</h2>\r\n\r\n        <button onClick={() => this.props.handlePanels(1)} className=\"midnight-blue-flat-button\">Top Up</button>\r\n        <div className=\"divider\" />\r\n        {this.props.balance > 0 &&\r\n          <button onClick={() => this.props.handlePanels(2)} className=\"midnight-blue-flat-button\">Cash Out</button>\r\n        }\r\n        <br /><br /><br /><br />\r\n        <button onClick={this.props.logOut} className=\"midnight-blue-flat-button\">BACK</button>\r\n        <div className=\"divider\" />\r\n        <button onClick={this.props.joinGame} className=\"midnight-blue-flat-button\">JOIN GAME</button>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass TopUp extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n\r\n        <p>Welcome {this.props.username}!</p>\r\n        <p>Current Balance: {this.props.balance}</p>\r\n        <br/><br/>\r\n        <p>Amount</p>\r\n        <input value={this.props.amount} onChange={this.props.handleAmount} type=\"number\"/>\r\n        <br/><br/>\r\n        <p style={{display: \"none\"}}>Private Key</p>\r\n        <input value={this.props.privatekey} onChange={this.props.handleKey} style={{width: \"100%\",display: \"none\"}}/>\r\n        <br/><br/>\r\n        <button onClick={() => this.props.handlePanels(0)} className=\"midnight-blue-flat-button\">Back</button>\r\n        <div className=\"divider\"/>\r\n        <button onClick={this.props.topUp} className=\"midnight-blue-flat-button\">Top Up</button>\r\n        <br/><br/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopUp;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass CashOut extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n\r\n        <p>Welcome {this.props.username}!</p>\r\n        <p>Current Balance: {this.props.balance}</p>\r\n        <br/><br/>\r\n        <p>Amount</p>\r\n        <input value={this.props.amount} onChange={this.props.handleAmount} type=\"number\"/>\r\n        <br/><br/>\r\n        <p>Receiving Address</p>\r\n        <input value={this.props.coinbase} onChange={this.props.handleAddress}/>\r\n        <br/><br/>\r\n        <button onClick={() => this.props.handlePanels(0)} className=\"midnight-blue-flat-button\">Back</button>\r\n        <div className=\"divider\"/>\r\n        <button onClick={this.props.cashOut} className=\"midnight-blue-flat-button\">Cash Out</button>\r\n        <br/><br/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CashOut;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass Chat extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Chat\" style={{position: \"absolute\", left: \"0px\", bottom: \"0px\", backgroundColor: \"#00000052\", width: \"350px\"}}>\r\n\r\n        <div style={{height: \"300px\", textAlign: \"left\", overflow: \"auto\", overflowWrap: \"break-word\"}}>\r\n        {this.props.messageList.map((o) => {return(<p style={{ color: this.props.colors[o.color]}}>{o.sender}: {o.message}</p>)})}\r\n        </div>\r\n        <input\r\n        value={this.props.chatMessage}\r\n        onChange={this.props.handleChat}\r\n        onKeyPress ={(e) => {if(e.key === 'Enter') this.props.sendMessage()}}\r\n        style={{position: \"relative\", bottom: \"0px\", width: \"85%\"}}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","import Web3 from 'web3'\r\n\r\nlet getWeb3 = new Promise(function(resolve, reject) {\r\n  // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n  window.addEventListener('load', function() {\r\n    var results = {};\r\n    var web3 = window.web3\r\n\r\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\r\n    if (typeof web3 !== 'undefined') {\r\n      // Use Mist/MetaMask's provider.\r\n      web3 = new Web3(web3.currentProvider)\r\n      results.web3 = web3;\r\n      console.log('Injected web3 detected.');\r\n      resolve(results)\r\n    } else {\r\n      // Fallback to localhost if no web3 injection. We've configured this to infura\r\n      var provider = new Web3.providers.HttpProvider('http://ropsten.infura.io/vKci4bjCOf3x7jLLQRWs')\r\n      web3 = new Web3(provider)\r\n      results.web3 = web3;\r\n      console.log('No web3 instance injected, using Local web3.');\r\n      resolve(results)\r\n      }\r\n  })\r\n});\r\n\r\nexport default getWeb3\r\n","import React, { Component } from 'react';\r\nimport { positions, withAlert } from 'react-alert'\r\nimport GameScreen from './GameScreen';\r\nimport Login from './Login';\r\nimport Profile from './Profile';\r\nimport TopUp from './TopUp';\r\nimport CashOut from './CashOut';\r\nimport Chat from './Chat'\r\nimport './App.css';\r\nimport getWeb3 from './getWeb3';\r\nimport { ethers } from 'ethers';\r\nimport openSocket from 'socket.io-client';\r\n//const serverURL = \"http://localhost:5001/\"// local dev\r\nconst serverURL = \"http://cryptopop.fun:5001/\"// server deploy\r\nconst socket = openSocket(serverURL);//, {transports: ['websocket', 'polling'], secure: false});\r\n\r\n\r\nconst abi = [{ \"constant\": false, \"inputs\": [{ \"name\": \"amount\", \"type\": \"uint256\" }, { \"name\": \"user\", \"type\": \"bytes32\" }, { \"name\": \"userAddress\", \"type\": \"address\" }, { \"name\": \"newBalance\", \"type\": \"uint256\" }], \"name\": \"withdraw\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"\", \"type\": \"bytes32\" }], \"name\": \"PlayerBalances\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"sender\", \"type\": \"address\" }], \"name\": \"changeAdmin\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"user\", \"type\": \"bytes32\" }], \"name\": \"deposit\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"admin\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"constructor\" }];\r\n\r\nconst colors = ['#f72585', '#b5179e', '#7209b7', '#560bad', '#480ca8', '#ffadad', '#22577a', '#38a3a5', '#57cc99', '#80ed99', '#ff0a54', '#ff477e', '#ff5c8a', '#004b23', '#006400', '#007200', '#38b000', '#ff7b00', '#ff9500', '#ffb700'];\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      web3: null,\r\n      currentUser: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      sessionId: \"\",\r\n      coinbase: \"\",\r\n      privateKey: \"\",\r\n      key: null,\r\n      userCount: 0,\r\n      balance: 0,\r\n      spent: 0,\r\n      gameStarted: false,\r\n      forcePop: false,\r\n      currentPanel: 0,\r\n      amount: 0,\r\n      messageList: [{ sender: \"GM\", message: \"Welcome to Balloon Game!\" }],\r\n      chatMessage: \"\",\r\n      colorIndex: 0,\r\n    }\r\n\r\n    this.login = this.login.bind(this)\r\n    this.logOut = this.logOut.bind(this)\r\n    this.register = this.register.bind(this)\r\n    this.getBalance = this.getBalance.bind(this)\r\n    this.handlePanels = this.handlePanels.bind(this)\r\n    this.handleKey = this.handleKey.bind(this)\r\n    this.handleAmount = this.handleAmount.bind(this)\r\n    this.handleAddress = this.handleAddress.bind(this)\r\n    this.handleMessageBox = this.handleMessageBox.bind(this)\r\n    this.joinGame = this.joinGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.sendMessage = this.sendMessage.bind(this)\r\n    this.topUp = this.topUp.bind(this)\r\n    this.cashOut = this.cashOut.bind(this)\r\n    this.clickBalloon = this.clickBalloon.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    var that = this;\r\n\r\n    socket.on('connect', function () {\r\n      console.log(\"connected\")\r\n      that.setState({ sessionId: socket.id })\r\n    });\r\n    socket.on(\"ADD\", message => {\r\n      console.log(message);\r\n      that.setState({ userCount: message.count });\r\n    });\r\n    socket.on(\"POP\", message => {\r\n      console.log(message);\r\n      that.setState({ forcePop: true });\r\n    });\r\n    socket.on(\"CheckBalance\", message => {\r\n      console.log(message);\r\n      that.getBalance();\r\n    });\r\n    socket.on(\"CHAT\", message => {\r\n      if (message.message === \"I won.\" /*&& message.sender !== this.state.username*/) {\r\n        this.props.alert.success(<div style={{fontSize: '1.5em',wordBreak: 'break-all'}}>{message.sender} won +100.</div>, {\r\n          position: positions.MIDDLE\r\n        });\r\n        return;\r\n      }\r\n      var msg = that.state.messageList;\r\n      msg.push({ sender: message.sender, message: message.message, color: message.color });\r\n      that.setState({ messageList: msg });\r\n    });\r\n\r\n    getWeb3.then(results => {\r\n      this.setState({ web3: results.web3 })\r\n      var that = this;\r\n      results.web3.eth.getAccounts((error, accounts) => {\r\n        if (accounts && accounts.length != 0) {\r\n          this.setState({ coinbase: accounts[0] })\r\n        }\r\n        if (localStorage.getItem('defaultWallet') && localStorage.getItem('defaultWallet').length > 30) {\r\n          var cb = localStorage.getItem('defaultWallet');\r\n          var k = localStorage.getItem('defaultKey')\r\n          if (k.length > 32) {\r\n            k = k.substr(2, k.length - 1)\r\n          }\r\n          this.setState({ coinbase: cb, pKey: k });\r\n          let x = results.web3.eth.accounts.privateKeyToAccount(localStorage.getItem('defaultKey'));\r\n          //console.log(results.web3.eth.accounts.wallet.add(x));\r\n          console.log(x)\r\n          console.log(results.web3.eth.accounts.wallet)\r\n        }\r\n      }).catch(() => { console.log('Error finding web3.') });\r\n    });\r\n\r\n    this.setState({ colorIndex: getRandomInt(0, colors.length) });\r\n  }\r\n\r\n  register(username, email, password) {\r\n    console.log(\"Registering...\")\r\n    fetch(serverURL + 'register/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": username,\r\n          \"email\": email,\r\n          \"password\": password\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.login(username, password);\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  login(username, password) {\r\n    fetch(serverURL + 'login/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        //mode: \"no-cors\",\r\n        body: JSON.stringify({\r\n          \"username\": username,\r\n          \"password\": password,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          var userhash = this.state.web3.utils.soliditySha3(username);\r\n          this.setState({ currentUser: userhash, username: username, password: password }, function () {\r\n            this.getBalance();\r\n          });\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  logOut() {\r\n    document.location.reload();\r\n  }\r\n\r\n  async getBalance() {\r\n    let provider = ethers.getDefaultProvider('ropsten');\r\n    let contract = new ethers.Contract(\"0x7Af6faCB28061cFEb5f7D6538B4d63988C8AeE66\", abi, provider);\r\n    let currentValue = await contract.PlayerBalances(this.state.currentUser);\r\n    console.log(ethers.utils.formatEther(currentValue) * 10000)\r\n    this.setState({ balance: Number((ethers.utils.formatEther(currentValue) * 10000).toFixed(0)) })\r\n\r\n    fetch(serverURL + 'balances/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          console.log(data.status)\r\n        }\r\n        else {\r\n          console.log(data.spent)\r\n          this.setState({ spent: Number(data.spent) });\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n\r\n  }\r\n\r\n  clickBalloon() {\r\n    console.log(\"CLICKED\")\r\n    fetch(serverURL + 'click/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"key\": this.state.key,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status == \"Winner\") {\r\n          this.props.alert.success(<div style={{fontSize: '2em'}}>+100</div>,{\r\n            position: positions.MIDDLE\r\n          });\r\n          this.setState({ spent: this.state.spent + 100 });\r\n          socket.emit(\"CHAT\", { sender: this.state.username, message: \"I won.\" });\r\n        }\r\n        else if (data.status == \"Loser\") {\r\n          this.props.alert.show(\"-10\",{\r\n            position: positions.BOTTOM_RIGHT\r\n          });\r\n          this.setState({ spent: this.state.spent - 10 });\r\n        }\r\n        else {\r\n          this.props.alert.show(data.status)\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  joinGame() {\r\n    fetch(serverURL + 'joinGame/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"key\": this.state.key,\r\n          \"sessionId\": this.state.sessionId\r\n\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.setState({ key: data.key, gameStarted: true });\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  async topUp() {\r\n    //if(key.substr(0,2) != \"0x\")\r\n    //key = \"0x\" + this.state.privateKey;\r\n    let mainContract = new this.state.web3.eth.Contract(abi, \"0x7Af6faCB28061cFEb5f7D6538B4d63988C8AeE66\");\r\n    let account = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n    let chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n    if (chainId != 3) {\r\n      this.props.alert.error(\"Wrong network\");\r\n      return;\r\n    }\r\n    let amount = ethers.utils.parseEther(this.state.amount).toString();\r\n    let overrides = {\r\n      gasLimit: 53000,\r\n      from: account[0],\r\n      value: amount,\r\n    };\r\n    let thisObj = this;\r\n    mainContract.methods.deposit(this.state.currentUser).send(overrides).on('transactionHash', function () {\r\n      thisObj.props.alert.show(\"Please Await Transaction\")\r\n      thisObj.setState({ currentPanel: 0 })\r\n    })\r\n      .on('receipt', (res) => {\r\n        thisObj.props.alert.show(\"Deposit Confirmed\")\r\n        thisObj.getBalance()\r\n      });\r\n    return;\r\n  }\r\n\r\n  cashOut() {\r\n    fetch(serverURL + 'withdraw/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"key\": this.state.key,\r\n          \"username\": this.state.currentUser,\r\n          \"password\": this.state.password,\r\n          \"address\": this.state.coinbase,\r\n          \"sessionId\": this.state.sessionId,\r\n          \"amount\": this.state.amount\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.props.alert.show(\"Withdrawal Confirmed\")\r\n          this.setState({ currentPanel: 0 })\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  quitGame() {\r\n    fetch(serverURL + 'quitGame/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"key\": this.state.key,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.setState({ gameStarted: false });\r\n          this.getBalance();\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  sendMessage() {\r\n    var sender = (this.state.username == \"\" ? \"Guest\" : this.state.username);\r\n    socket.emit(\"CHAT\", { sender: sender, message: this.state.chatMessage, color: this.state.colorIndex })\r\n    this.setState({ chatMessage: \"\" })\r\n  }\r\n\r\n  handleMessageBox(event) {\r\n    this.setState({ chatMessage: event.target.value })\r\n  }\r\n\r\n  handlePanels(val) {\r\n    this.setState({ currentPanel: val })\r\n  }\r\n\r\n  handleKey(event) {\r\n    this.setState({ privateKey: event.target.value })\r\n  }\r\n\r\n  handleAmount(event) {\r\n    this.setState({ amount: event.target.value })\r\n  }\r\n\r\n  handleAddress(event) {\r\n    this.setState({ coinbase: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const profilePanels = [\r\n      <Profile\r\n        joinGame={this.joinGame}\r\n        logOut={this.logOut}\r\n        username={this.state.username}\r\n        balance={this.state.balance + this.state.spent}\r\n        handlePanels={this.handlePanels}\r\n      />,\r\n      <TopUp\r\n        joinGame={this.joinGame}\r\n        username={this.state.username}\r\n        balance={this.state.balance + this.state.spent}\r\n        handlePanels={this.handlePanels}\r\n        handleAmount={this.handleAmount}\r\n        amount={this.state.amount}\r\n        privateKey={this.state.privateKey}\r\n        handleKey={this.handleKey}\r\n        topUp={this.topUp}\r\n      />,\r\n      <CashOut\r\n        joinGame={this.joinGame}\r\n        username={this.state.username}\r\n        balance={this.state.balance + this.state.spent}\r\n        handlePanels={this.handlePanels}\r\n        coinbase={this.state.coinbase}\r\n        handleAmount={this.handleAmount}\r\n        handleAddress={this.handleAddress}\r\n        amount={this.state.amount}\r\n        cashOut={this.cashOut}\r\n      />\r\n    ]\r\n    return (\r\n      <div className=\"Home\">\r\n        <div className=\"Panel\">\r\n          <h1>Balloon Game</h1>\r\n          {this.state.currentUser == \"\" ? <Login login={this.login} register={this.register}/> : (this.state.gameStarted ? null : profilePanels[this.state.currentPanel])}\r\n        </div>\r\n        <GameScreen userCount={this.state.userCount} clickBalloon={this.clickBalloon} gameStarted={this.state.gameStarted} />\r\n        <div style={{ position: \"absolute\", left: \"0px\", top: \"0px\", backgroundColor: \"#00000052\", borderRadius: \"5px\", margin: \"10px\", color: \"white\", padding: \"5px\" }}>\r\n          <h1>{this.state.userCount}</h1>\r\n        Players</div>\r\n        <div style={{ position: \"absolute\", right: \"0px\", top: \"0px\", backgroundColor: \"#00000052\", borderRadius: \"5px\", margin: \"10px\", color: \"white\", padding: \"5px\" }}>\r\n          Balance\r\n        <h1>{this.state.balance + this.state.spent}</h1></div>\r\n        {this.state.gameStarted ?\r\n          <div onClick={this.quitGame} style={{ position: \"absolute\", right: \"0px\", bottom: \"0px\", backgroundColor: \"#00000052\", borderRadius: \"5px\", margin: \"10px\", color: \"white\", padding: \"5px\" }}>\r\n            Quit Game</div>\r\n          : null}\r\n        {\r\n          this.state.gameStarted &&\r\n          <Chat messageList={this.state.messageList} chatMessage={this.state.chatMessage} handleChat={this.handleMessageBox} sendMessage={this.sendMessage} colors={colors}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAlert()(Home);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Home.js';\nimport GameScreen from './GameScreen.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Router>\n      <div>\n        <Route exact path='/' render={(props) => <Home {...props}\n        />}/>\n        <Route path='/exchange' render={(props) => <GameScreen {...props}\n        /> }/>\n        </div>\n      </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport * as serviceWorker from './serviceWorker';\n\nconst options = {\n  position: 'bottom center',\n  timeout: 5000,\n  offset: '30px',\n  transition: 'scale'\n}\n\nReactDOM.render(<AlertProvider template={AlertTemplate} {...options}><App /></AlertProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}