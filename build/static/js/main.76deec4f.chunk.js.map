{"version":3,"sources":["GameScreen.js","logo.svg","constansts.js","Login.js","Profile.js","TopUp.js","CashOut.js","Chat.js","getWeb3.js","utils.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["game","serverURL","balloonDirection","balloonSpeed","balloonAngular","balloonPosition","balloons","GameScreen","props","state","this","load","image","spritesheet","frameWidth","frameHeight","bg","add","sprite","displayWidth","window","innerWidth","displayHeight","innerHeight","setOrigin","cloudBack","tileSprite","setScale","tileScaleX","tileScaleY","cloudMid","cloudFront","anims","create","key","frames","generateFrameNumbers","start","end","frameRate","fetch","method","headers","then","response","json","data","angular","speed","position","direction","i","balloon","physics","x","y","ignoreGravity","setInteractive","push","body","allowGravity","setBounce","setAcceleration","setCollideWorldBounds","setGravityY","setVelocity","angularVelocity","angularDrag","on","e","downElement","closest","started","clickBalloon","catch","err","console","log","tilePositionX","length","nextProps","gameStarted","config","Phaser","Scene","type","AUTO","parent","pixelArt","backgroundColor","width","height","default","arcade","gravity","debug","scene","preload","update","Game","socket","index","play","animation","frame","id","Component","Login","username","password","email","isLogin","isRegister","handleUsername","bind","handlePassword","handleEmail","handleLogin","handleRegister","handleBack","event","setState","target","value","alert","error","login","register","className","onChange","onClick","withAlert","Profile","balance","handlePanels","logOut","joinGame","TopUp","amount","handleAmount","style","display","privatekey","handleKey","topUp","CashOut","coinbase","handleAddress","cashOut","Chat","messagesEndRef","React","createRef","scrollToBottom","current","scrollIntoView","behavior","left","bottom","textAlign","overflow","overflowWrap","messageList","map","o","sender","message","color","colors","timestring","ref","chatMessage","handleChat","onKeyPress","sendMessage","getWeb3","Promise","resolve","reject","addEventListener","results","web3","Web3","currentProvider","provider","providers","HttpProvider","getTimeString","date","toLocaleTimeString","getRandomInt","min","max","Math","ceil","floor","random","openSocket","abi","Home","currentUser","sessionId","privateKey","userCount","spent","forcePop","currentPanel","Date","getUTCMilliseconds","colorIndex","boomMsgList","getBalance","handleMessageBox","quitGame","that","count","boomMsg","setTimeout","boomMsgList1","pop","msg","t_msg","toLocaleDateString","predate","messages","eth","getAccounts","accounts","localStorage","getItem","cb","k","substr","pKey","privateKeyToAccount","wallet","JSON","stringify","status","show","userhash","utils","soliditySha3","document","location","reload","a","ethers","getDefaultProvider","contract","Contract","PlayerBalances","currentValue","formatEther","Number","toFixed","idx","emit","success","fontSize","positions","MIDDLE","BOTTOM_RIGHT","mainContract","ethereum","request","account","parseEther","toString","overrides","gasLimit","from","thisObj","methods","deposit","send","res","val","profilePanels","backgroundImage","top","borderRadius","margin","padding","right","App","Route","exact","path","render","Boolean","hostname","match","ReactDOM","template","AlertTemplate","timeout","offset","transition","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wXAKIA,E,mGCLW,I,gECGAC,EAFG,6B,OFOdC,EAAmB,GACnBC,EAAe,GACfC,EAAiB,GACjBC,EAAkB,GAGlBC,EAAW,GAsNAC,E,kDAnNb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXT,KAAM,MAHS,E,2CASnB,WACEU,KAAKC,KAAKC,MAAM,aAAc,2BAE9BF,KAAKC,KAAKE,YAAY,UACpB,2BACA,CAAEC,WAAY,IAAKC,YAAa,MAElCL,KAAKC,KAAKC,MAAM,YAAa,+BAC7BF,KAAKC,KAAKC,MAAM,WAAY,iCAC5BF,KAAKC,KAAKC,MAAM,aAAc,kC,oBAGhC,WAAU,IAAD,OAGHI,EAAKN,KAAKO,IAAIC,OAAO,EAAG,EAAG,cAC/BF,EAAGG,aAAeC,OAAOC,WACzBL,EAAGM,cAAgBF,OAAOG,YAC1BP,EAAGQ,UAAU,EAAG,GAEhBd,KAAKe,UAAYf,KAAKO,IAAIS,WAAWN,OAAOC,WAAa,EAAGD,OAAOG,YAAc,EAAGH,OAAOC,WAAYD,OAAOG,YAAa,aAC3Hb,KAAKe,UAAUE,SAAS,GACxBjB,KAAKe,UAAUG,WAAa,GAC5BlB,KAAKe,UAAUI,WAAa,GAE5BnB,KAAKoB,SAAWpB,KAAKO,IAAIS,WAAWN,OAAOC,WAAa,EAAGD,OAAOG,YAAc,EAAGH,OAAOC,WAAYD,OAAOG,YAAa,YAC1Hb,KAAKoB,SAASH,SAAS,GACvBjB,KAAKoB,SAASF,WAAa,GAC3BlB,KAAKoB,SAASD,WAAa,GAE3BnB,KAAKqB,WAAarB,KAAKO,IAAIS,WAAWN,OAAOC,WAAa,EAAGD,OAAOG,YAAc,EAAGH,OAAOC,WAAYD,OAAOG,YAAa,cAC5Hb,KAAKqB,WAAWJ,SAAS,GACzBjB,KAAKqB,WAAWH,WAAa,GAC7BlB,KAAKqB,WAAWF,WAAa,GAE7BnB,KAAKsB,MAAMC,OAAO,CAChBC,IAAK,OACLC,OAAQzB,KAAKsB,MAAMI,qBAAqB,UAAW,CAAEC,MAAO,EAAGC,IAAK,IACpEC,UAAW,KAIb7B,KAAKsB,MAAMC,OAAO,CAChBC,IAAK,MACLC,OAAQzB,KAAKsB,MAAMI,qBAAqB,UAAW,CAAEC,MAAO,EAAGC,IAAK,KACpEC,UAAW,KAIbC,MAAMvC,EAAY,cAChB,CACEwC,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAEjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACJ1C,EAAiB0C,EAAKC,QACtB5C,EAAe2C,EAAKE,MACpB3C,EAAkByC,EAAKG,SACvB/C,EAAmB4C,EAAKI,UACRJ,EAAKT,MAErB,IAPY,eAOHc,GACP,IAAIC,EAAU,EAAKC,QAAQpC,IAAIC,OAAOb,EAAgB8C,GAAGG,EAAIlC,OAAOC,WAAYhB,EAAgB8C,GAAGI,EAAInC,OAAOG,YAAa,UAAW,CAAEiC,eAAe,IAASC,iBAChKnD,EAASoD,KAAKN,GACd9C,EAAS6C,GAAGhC,aAAe,IAC3Bb,EAAS6C,GAAG7B,cAAgB,IAE5BhB,EAAS6C,GAAGQ,KAAKC,cAAe,EAChCtD,EAAS6C,GAAGU,UAAU,EAAG,GACzBvD,EAAS6C,GAAGW,gBAAgB,EAAG,GAC/BxD,EAAS6C,GAAGY,uBAAsB,GAClCzD,EAAS6C,GAAGQ,KAAKK,YAAY,GAC7B1D,EAAS6C,GAAGc,YAAY,EAAG,GAC3B3D,EAAS6C,GAAGQ,KAAKO,gBAAkB9D,EAAe+C,GAClD7C,EAAS6C,GAAGQ,KAAKQ,YAAc,EAC/B7D,EAAS6C,GAAGiB,GAAG,eAAe,SAAUC,GAE5B,OADFA,EAAEC,YAAYC,QAAQ,UAG1BvE,EAAKwE,SACPxE,EAAKyE,aAAatB,OAnBfA,EAAI,EAAGA,EAnFL,EAmFuBA,IAAM,EAA/BA,MAgCRuB,OAAM,SAAUC,GACjBC,QAAQC,IAAIF,Q,oBAKlB,WAIE,GAHAjE,KAAKe,UAAUqD,eAAiB,IAChCpE,KAAKoB,SAASgD,eAAiB,GAC/BpE,KAAKqB,WAAW+C,eAAiB,IA5HlB,GA6HZxE,EAASyE,OAEV,IAAK,IAAI5B,EAAI,EAAGA,EA/HH,EA+HqBA,IAChC7C,EAAS6C,GAAGG,EAAIlC,OAAOC,WAAahB,EAAgB8C,GAAGG,EACvDhD,EAAS6C,GAAGI,EAAInC,OAAOG,YAAclB,EAAgB8C,GAAGI,EAExDlD,EAAgB8C,GAAGG,GAAKpD,EAAiBiD,GAAGG,EAAInD,EAAagD,GAAGG,EAChEjD,EAAgB8C,GAAGI,GAAKrD,EAAiBiD,GAAGI,EAAIpD,EAAagD,GAAGI,EAC5DlD,EAAgB8C,GAAGG,EAAI,EACzBjD,EAAgB8C,GAAGG,EAAI,EAEhBjD,EAAgB8C,GAAGG,EAAI,IAC9BjD,EAAgB8C,GAAGG,EAAI,GAErBjD,EAAgB8C,GAAGI,EAAI,IACzBlD,EAAgB8C,GAAGI,EAAI,EACvBlD,EAAgB8C,GAAGG,EAAIjD,EAAgB8C,GAAGG,EAC1CpD,EAAiBiD,GAAGG,GAA6B,EAAzBpD,EAAiBiD,GAAGG,GAE9ChD,EAAS6C,GAAGc,YAAY,EAAG,K,uCAMjC,SAA0Be,GACxBhF,EAAKyE,aAAeO,EAAUP,aAC9BzE,EAAKwE,QAAUQ,EAAUC,c,+BAG3B,WAAqB,IAAD,OAEdC,GADY,IAAIC,IAAOC,MAAMpF,GACpB,CACXqF,KAAMF,IAAOG,KACbC,OAAQ,gBACRC,UAAU,EACVC,gBAAiB,yBACjBC,MAAOtE,OAAOC,WACdsE,OAAQvE,OAAOG,YACf8B,QAAS,CACPuC,QAAS,SACTC,OAAQ,CACNC,QAAS,CAAEvC,EAAG,KACdwC,OAAO,IAGXC,MAAO,CACLC,QAASvF,KAAKuF,QACdhE,OAAQvB,KAAKuB,OACbiE,OAAQxF,KAAKwF,UAGjBlG,EAAO,IAAImF,IAAOgB,KAAKjB,GACvBN,QAAQC,IAAI7E,GACZA,EAAKyE,aAAe/D,KAAKF,MAAMiE,aAC/BzE,EAAKwE,QAAU9D,KAAKF,MAAMyE,YAW1BvE,KAAKF,MAAM4F,OAAOhC,GAAG,OAAO,SAAAtB,GAC1B,IAAIuD,EAAQvD,EAAKuD,MAEjB/F,EAAS+F,GAAOC,KAAK,OACrBhG,EAAS+F,GAAOjC,GAAG,qBAAqB,SAACmC,EAAWC,GAC7B,OAAjBD,EAAUrE,KAKZ5B,EAAS+F,GAAOrE,MAAMsE,KAAK,QAAQ,KAEpC,MAEL5F,KAAKF,MAAM4F,OAAOhC,GAAG,gBAAe,SAAAtB,GAClC3C,EAAe2C,EAAKE,MACpB3C,EAAkByC,EAAKG,SACvB/C,EAAmB4C,EAAKI,e,oBAK5B,WACE,OACE,yBAASuD,GAAG,sB,GA9MOC,aGZnBC,E,kDACJ,WAAYnG,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXmG,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,SAAS,EACTC,YAAY,GAEd,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAEnB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,eAAiB,EAAKA,eAAeJ,KAApB,gBACtB,EAAKK,WAAa,EAAKA,WAAWL,KAAhB,gBAfD,E,kDAmBnB,SAAeM,GACb9G,KAAK+G,SAAS,CAAEb,SAAUY,EAAME,OAAOC,U,4BAGzC,SAAeH,GACb9G,KAAK+G,SAAS,CAAEZ,SAAUW,EAAME,OAAOC,U,yBAGzC,SAAYH,GACV9G,KAAK+G,SAAS,CAAEX,MAAOU,EAAME,OAAOC,U,yBAGtC,WACE,GAAIjH,KAAKD,MAAMsG,QAAS,CACtB,GAA0B,IAAvBrG,KAAKD,MAAMmG,SAGZ,YADAlG,KAAKF,MAAMoH,MAAMC,MAAM,kBAGzBnH,KAAKF,MAAMsH,MAAMpH,KAAKD,MAAMmG,SAAUlG,KAAKD,MAAMoG,eAGjDnG,KAAK+G,SAAS,CAAEV,SAAS,M,wBAI7B,WACErG,KAAK+G,SAAS,CAAEV,SAAS,EAAOC,YAAY,M,4BAG9C,WACE,GAAItG,KAAKD,MAAMuG,WAAY,CACzB,GAA0B,IAAvBtG,KAAKD,MAAMmG,SAGZ,YADAlG,KAAKF,MAAMoH,MAAMC,MAAM,kBAGzBnH,KAAKF,MAAMuH,SAASrH,KAAKD,MAAMmG,SAAUlG,KAAKD,MAAMqG,MAAOpG,KAAKD,MAAMoG,eAGtEnG,KAAK+G,SAAS,CAAET,YAAY,M,oBAKhC,WACE,OACE,sBAAKgB,UAAU,QAAf,WACKtH,KAAKD,MAAMsG,SAAWrG,KAAKD,MAAMuG,aAClC,qCACE,yCACA,uBAAOW,MAAOjH,KAAKD,MAAMmG,SAAUqB,SAAUvH,KAAKuG,iBAClD,uBACCvG,KAAKD,MAAMuG,YACV,qCACE,sCACA,uBAAOW,MAAOjH,KAAKD,MAAMqG,MAAOmB,SAAUvH,KAAK0G,cAC/C,0BAGJ,yCACA,uBAAO/B,KAAK,WAAWsC,MAAOjH,KAAKD,MAAMoG,SAAUoB,SAAUvH,KAAKyG,iBAClE,uBAAM,2BAGPzG,KAAKD,MAAMuG,YAActG,KAAKD,MAAMsG,UACrC,qCACE,wBAAQiB,UAAU,4BAA4BE,QAASxH,KAAK6G,WAA5D,kBACA,qBAAKS,UAAU,gBAGhBtH,KAAKD,MAAMuG,YACZ,qCACE,wBAAQgB,UAAU,4BAA4BE,QAASxH,KAAK2G,YAA5D,mBACA,qBAAKW,UAAU,gBAGhBtH,KAAKD,MAAMsG,SACZ,wBAAQiB,UAAU,4BAA4BE,QAASxH,KAAK4G,eAA5D,6B,GAlGUZ,aAyGLyB,gBAAYxB,GCjFZyB,E,4JAvBb,WAAU,IAAD,OACP,OACE,sBAAKJ,UAAU,QAAf,UAEE,yCAAYtH,KAAKF,MAAMoG,SAAvB,OACA,iDACA,+BAAKlG,KAAKF,MAAM6H,QAAhB,UAEA,wBAAQH,QAAS,kBAAM,EAAK1H,MAAM8H,aAAa,IAAIN,UAAU,4BAA7D,oBACA,qBAAKA,UAAU,YACdtH,KAAKF,MAAM6H,QAAU,GACpB,wBAAQH,QAAS,kBAAM,EAAK1H,MAAM8H,aAAa,IAAIN,UAAU,4BAA7D,sBAEF,uBAAM,uBAAM,uBAAM,uBAClB,wBAAQE,QAASxH,KAAKF,MAAM+H,OAAQP,UAAU,4BAA9C,kBACA,qBAAKA,UAAU,YACf,wBAAQE,QAASxH,KAAKF,MAAMgI,SAAUR,UAAU,4BAAhD,8B,GAjBctB,aCwBP+B,E,4JAvBb,WAAU,IAAD,OACP,OACE,sBAAKT,UAAU,QAAf,UAEE,yCAAYtH,KAAKF,MAAMoG,SAAvB,OACA,kDAAqBlG,KAAKF,MAAM6H,WAChC,uBAAK,uBACL,uCACA,uBAAOV,MAAOjH,KAAKF,MAAMkI,OAAQT,SAAUvH,KAAKF,MAAMmI,aAActD,KAAK,WACzE,uBAAK,uBACL,mBAAGuD,MAAO,CAACC,QAAS,QAApB,yBACA,uBAAOlB,MAAOjH,KAAKF,MAAMsI,WAAYb,SAAUvH,KAAKF,MAAMuI,UAAWH,MAAO,CAAClD,MAAO,OAAOmD,QAAS,UACpG,uBAAK,uBACL,wBAAQX,QAAS,kBAAM,EAAK1H,MAAM8H,aAAa,IAAIN,UAAU,4BAA7D,kBACA,qBAAKA,UAAU,YACf,wBAAQE,QAASxH,KAAKF,MAAMwI,MAAOhB,UAAU,4BAA7C,oBACA,uBAAK,8B,GAjBOtB,aCwBLuC,E,4JAvBb,WAAU,IAAD,OACP,OACE,sBAAKjB,UAAU,QAAf,UAEE,yCAAYtH,KAAKF,MAAMoG,SAAvB,OACA,kDAAqBlG,KAAKF,MAAM6H,WAChC,uBAAK,uBACL,uCACA,uBAAOV,MAAOjH,KAAKF,MAAMkI,OAAQT,SAAUvH,KAAKF,MAAMmI,aAActD,KAAK,WACzE,uBAAK,uBACL,kDACA,uBAAOsC,MAAOjH,KAAKF,MAAM0I,SAAUjB,SAAUvH,KAAKF,MAAM2I,gBACxD,uBAAK,uBACL,wBAAQjB,QAAS,kBAAM,EAAK1H,MAAM8H,aAAa,IAAIN,UAAU,4BAA7D,kBACA,qBAAKA,UAAU,YACf,wBAAQE,QAASxH,KAAKF,MAAM4I,QAASpB,UAAU,4BAA/C,sBACA,uBAAK,8B,GAjBStB,aC2CP2C,E,kDA1Cb,WAAY7I,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX6I,eAAgBC,IAAMC,aAExB,EAAKC,eAAiB,EAAKA,eAAevC,KAApB,gBALL,E,qDAOnB,WACExG,KAAK+I,mB,gCAEP,WACE/I,KAAK+I,mB,4BAEP,WACE/I,KAAKD,MAAM6I,eAAeI,QAAQC,eAAe,CAAEC,SAAU,a,oBAE/D,WAAU,IAAD,OACP,OACE,sBAAK5B,UAAU,OAAOY,MAAO,CAAC3F,SAAU,WAAY4G,KAAM,MAAOC,OAAQ,MAAOrE,gBAAiB,YAAaC,MAAO,SAArH,UAEE,sBAAKkD,MAAO,CAACjD,OAAQ,QAASoE,UAAW,OAAQC,SAAU,OAAQC,aAAc,cAAjF,UACIvJ,KAAKF,MAAM0J,YAAYC,KAAI,SAACC,GACxB,MAAe,kBAAZA,EAAEC,OACK,sBAAKzB,MAAO,CAAEmB,UAAU,UAAxB,uBAA+CK,EAAEE,QAAjD,gBAED,sBAAKtC,UAAU,cAAcY,MAAO,CAAE2B,MAAO,EAAK/J,MAAMgK,OAAOJ,EAAEG,QAAjE,UAA2EH,EAAEC,OAA7E,KAAuFD,EAAEE,QAAzF,IAAkG,qBAAKtC,UAAU,OAAf,SAAuBoC,EAAEK,mBAI1I,qBAAKC,IAAKhK,KAAKD,MAAM6I,oBAEvB,uBACA3B,MAAOjH,KAAKF,MAAMmK,YAClB1C,SAAUvH,KAAKF,MAAMoK,WACrBC,WAAa,SAACxG,GAAoB,UAAVA,EAAEnC,KAAiB,EAAK1B,MAAMsK,eACtDlC,MAAO,CAAC3F,SAAU,WAAY6G,OAAQ,MAAOpE,MAAO,gB,GApCzCgB,a,kBCsBJqE,EAxBD,IAAIC,SAAQ,SAASC,EAASC,GAE1C9J,OAAO+J,iBAAiB,QAAQ,WAC9B,IAAIC,EAAU,GACVC,EAAOjK,OAAOiK,KAGlB,GAAoB,qBAATA,EAETA,EAAO,IAAIC,IAAKD,EAAKE,iBACrBH,EAAQC,KAAOA,EACfzG,QAAQC,IAAI,2BACZoG,EAAQG,OACH,CAEL,IAAII,EAAW,IAAIF,IAAKG,UAAUC,aAAa,iDAC/CL,EAAO,IAAIC,IAAKE,GAChBJ,EAAQC,KAAOA,EACfzG,QAAQC,IAAI,gDACZoG,EAAQG,U,iBChBVO,EAAgB,SAACC,GACjB,OAAOA,EAAKC,sBAGDC,EATI,SAACC,EAAKC,GAGvB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,ICY5C3F,E,MAASiG,GAAWpM,GAGpBqM,EAAM,CAAC,CAAE,UAAY,EAAO,OAAU,CAAC,CAAE,KAAQ,SAAU,KAAQ,WAAa,CAAE,KAAQ,OAAQ,KAAQ,WAAa,CAAE,KAAQ,cAAe,KAAQ,WAAa,CAAE,KAAQ,aAAc,KAAQ,YAAc,KAAQ,WAAY,QAAW,CAAC,CAAE,KAAQ,UAAW,KAAQ,SAAW,SAAW,EAAO,gBAAmB,aAAc,KAAQ,YAAc,CAAE,UAAY,EAAM,OAAU,CAAC,CAAE,KAAQ,GAAI,KAAQ,YAAc,KAAQ,iBAAkB,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,YAAc,SAAW,EAAO,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,UAAY,EAAO,OAAU,CAAC,CAAE,KAAQ,SAAU,KAAQ,YAAc,KAAQ,cAAe,QAAW,CAAC,CAAE,KAAQ,UAAW,KAAQ,SAAW,SAAW,EAAO,gBAAmB,aAAc,KAAQ,YAAc,CAAE,UAAY,EAAO,OAAU,CAAC,CAAE,KAAQ,OAAQ,KAAQ,YAAc,KAAQ,UAAW,QAAW,CAAC,CAAE,KAAQ,UAAW,KAAQ,SAAW,SAAW,EAAM,gBAAmB,UAAW,KAAQ,YAAc,CAAE,UAAY,EAAM,OAAU,GAAI,KAAQ,QAAS,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,YAAc,SAAW,EAAO,gBAAmB,OAAQ,KAAQ,YAAc,CAAE,OAAU,GAAI,SAAW,EAAM,gBAAmB,UAAW,KAAQ,gBAEntC9B,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAErM+B,E,kDACJ,WAAY/L,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX4K,KAAM,KACNmB,YAAa,GACb5F,SAAU,GACVC,SAAU,GACV4F,UAAW,GACXvD,SAAU,GACVwD,WAAY,GACZxK,IAAK,KACLyK,UAAW,EACXtE,QAAS,EACTuE,MAAO,EACP3H,aAAa,EACb4H,UAAU,EACVC,aAAc,EACdpE,OAAQ,EACRwB,YAAa,CAAC,CAAEG,OAAQ,KAAMC,QAAS,2BAA4BsB,MAAM,IAAImB,MAAOC,qBAAsBvC,WAAYkB,EAAc,IAAIoB,QACxIpC,YAAa,GACbsC,WAAY,EACZC,YAAa,IAGf,EAAKpF,MAAQ,EAAKA,MAAMZ,KAAX,gBACb,EAAKqB,OAAS,EAAKA,OAAOrB,KAAZ,gBACd,EAAKa,SAAW,EAAKA,SAASb,KAAd,gBAChB,EAAKiG,WAAa,EAAKA,WAAWjG,KAAhB,gBAClB,EAAKoB,aAAe,EAAKA,aAAapB,KAAlB,gBACpB,EAAK6B,UAAY,EAAKA,UAAU7B,KAAf,gBACjB,EAAKyB,aAAe,EAAKA,aAAazB,KAAlB,gBACpB,EAAKiC,cAAgB,EAAKA,cAAcjC,KAAnB,gBACrB,EAAKkG,iBAAmB,EAAKA,iBAAiBlG,KAAtB,gBACxB,EAAKsB,SAAW,EAAKA,SAAStB,KAAd,gBAChB,EAAKmG,SAAW,EAAKA,SAASnG,KAAd,gBAChB,EAAK4D,YAAc,EAAKA,YAAY5D,KAAjB,gBACnB,EAAK8B,MAAQ,EAAKA,MAAM9B,KAAX,gBACb,EAAKkC,QAAU,EAAKA,QAAQlC,KAAb,gBACf,EAAKzC,aAAe,EAAKA,aAAayC,KAAlB,gBAtCH,E,qDAyCnB,WAAqB,IAAD,OACdoG,EAAO5M,KAEX0F,EAAOhC,GAAG,WAAW,WACnBQ,QAAQC,IAAI,aACZyI,EAAK7F,SAAS,CAAEgF,UAAWrG,EAAOK,QAEpCL,EAAOhC,GAAG,OAAO,SAAAkG,GACf1F,QAAQC,IAAIyF,GACZgD,EAAK7F,SAAS,CAAEkF,UAAWrC,EAAQiD,WAErCnH,EAAOhC,GAAG,OAAO,SAAAkG,GACf1F,QAAQC,IAAIyF,GACZgD,EAAK7F,SAAS,CAAEoF,UAAU,OAE5BzG,EAAOhC,GAAG,gBAAgB,SAAAkG,GACxB1F,QAAQC,IAAIyF,GACZgD,EAAKH,gBAEP/G,EAAOhC,GAAG,QAAQ,SAAAkG,GAChB,GAAwB,WAApBA,EAAQA,SAAwBA,EAAQD,SAAW,EAAK5J,MAAMmG,SAAU,CAI1E,IAAI4G,EAAUlD,EAAQD,OAAS,kBAC3BiD,EAAO,EACPJ,EAAc,EAAKzM,MAAMyM,YAC7BA,EAAYxJ,KAAK8J,GACjB,EAAK/F,SAAS,CAAEyF,YAAaA,IAC7BtI,QAAQC,IAAI,EAAKpE,MAAMyM,aACvBO,YAAW,WACT,IAAIC,EAAeJ,EAAK7M,MAAMyM,YAC9BQ,EAAaC,MACbL,EAAK7F,SAAS,CAAEyF,YAAaQ,MAC5B,KAEmB,WAApBpD,EAAQA,UACVA,EAAQA,QAAU,oBAGpB,IAAIsD,EAAM,EAAKnN,MAAMyJ,YAEjB0B,EAAO,IAAImB,KAAKzC,EAAQsB,MAE5B,GAAkB,GAAdgC,EAAI7I,OAAa,CACnB,IAAI8I,EAAQ,CAAExD,OAAQ,iBAAkBuB,KAAMtB,EAAQsB,KAAMtB,QAASsB,EAAKkC,sBAC1EF,EAAIlK,KAAKmK,OAEN,CACH,IAAIE,EAAU,IAAIhB,KAAKa,EAAIA,EAAI7I,OAAS,GAAG6G,MAC3C,GAAIA,EAAKkC,sBAAwBC,EAAQD,qBAAsB,CACzDD,EAAQ,CAAExD,OAAQ,iBAAkBuB,KAAMtB,EAAQsB,KAAMtB,QAASsB,EAAKkC,sBAC1EF,EAAIlK,KAAKmK,IAIbD,EAAIlK,KAAK,CAAE2G,OAAQC,EAAQD,OAAQC,QAASA,EAAQA,QAASC,MAAOD,EAAQC,MAAOqB,KAAMtB,EAAQsB,KAAMnB,WAAYkB,EAAcC,KACjI,EAAKnE,SAAS,CAAEyC,YAAa0D,OAE/BxH,EAAOhC,GAAG,WAAW,SAAA4J,GACnB,IAAIJ,EAAMN,EAAK7M,MAAMyJ,YACrB,KAAI0D,EAAI7I,OAAS,GAAjB,CAEA,IAAK,IAAI5B,EAAI,EAAGA,EAAI6K,EAASjJ,OAAQ5B,IAAK,CACxC,IAAImH,EAAU0D,EAAS7K,GACnByI,EAAO,IAAImB,KAAKzC,EAAQsB,MAC5B,GAAS,GAALzI,EAAQ,CACV,IAAI0K,EAAQ,CAAExD,OAAQ,iBAAkBuB,KAAMtB,EAAQsB,KAAMtB,QAASsB,EAAKkC,sBAC1EF,EAAIlK,KAAKmK,OAEN,CACH,IAAIE,EAAU,IAAIhB,KAAKiB,EAAS7K,EAAI,GAAGyI,MACvC,GAAIA,EAAKkC,sBAAwBC,EAAQD,qBAAsB,CACzDD,EAAQ,CAAExD,OAAQ,iBAAkBuB,KAAMtB,EAAQsB,KAAMtB,QAASsB,EAAKkC,sBAC1EF,EAAIlK,KAAKmK,IAGW,WAApBvD,EAAQA,UACVA,EAAQA,QAAU,oBAEI,WAApBA,EAAQA,SACVsD,EAAIlK,KAAK,CAAE2G,OAAQC,EAAQD,OAAQC,QAASA,EAAQA,QAASC,MAAOD,EAAQC,MAAOqB,KAAMtB,EAAQsB,KAAMnB,WAAYkB,EAAcC,KAGrI0B,EAAK7F,SAAS,CAAEyC,YAAa0D,QAG/B7C,EAAQpI,MAAK,SAAAyI,GACX,EAAK3D,SAAS,CAAE4D,KAAMD,EAAQC,OAE9BD,EAAQC,KAAK4C,IAAIC,aAAY,SAACrG,EAAOsG,GAInC,GAHIA,GAA+B,GAAnBA,EAASpJ,QACvB,EAAK0C,SAAS,CAAEyB,SAAUiF,EAAS,KAEjCC,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,iBAAiBtJ,OAAS,GAAI,CAC9F,IAAIuJ,EAAKF,aAAaC,QAAQ,iBAC1BE,EAAIH,aAAaC,QAAQ,cACzBE,EAAExJ,OAAS,KACbwJ,EAAIA,EAAEC,OAAO,EAAGD,EAAExJ,OAAS,IAE7B,EAAK0C,SAAS,CAAEyB,SAAUoF,EAAIG,KAAMF,IACpC,IAAIjL,EAAI8H,EAAQC,KAAK4C,IAAIE,SAASO,oBAAoBN,aAAaC,QAAQ,eAE3EzJ,QAAQC,IAAIvB,GACZsB,QAAQC,IAAIuG,EAAQC,KAAK4C,IAAIE,SAASQ,YAEvCjK,OAAM,WAAQE,QAAQC,IAAI,6BAG/BnE,KAAK+G,SAAS,CAAEwF,WAAYnB,EAAa,EAAGtB,EAAOzF,Y,sBAGrD,SAAS6B,EAAUE,EAAOD,GAAW,IAAD,OAClCjC,QAAQC,IAAI,kBACZrC,MAAMvC,EAAY,YAChB,CACEwC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBiB,KAAMiL,KAAKC,UAAU,CACnB,SAAYjI,EACZ,MAASE,EACT,SAAYD,MAEblE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACe,MAAfA,EAAKgM,OACP,EAAKtO,MAAMoH,MAAMmH,KAAKjM,EAAKgM,QAG3B,EAAKhH,MAAMlB,EAAUC,MAEtBnC,OAAM,SAAUC,GACjBC,QAAQC,IAAIF,Q,mBAIlB,SAAMiC,EAAUC,GAAW,IAAD,OACxBrE,MAAMvC,EAAY,SAChB,CACEwC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAGlBiB,KAAMiL,KAAKC,UAAU,CACnB,SAAYjI,EACZ,SAAYC,EACZ,UAAanG,KAAKD,MAAMgM,cAEzB9J,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACJ,GAAmB,MAAfA,EAAKgM,OACP,EAAKtO,MAAMoH,MAAMmH,KAAKjM,EAAKgM,YAExB,CACH,IAAIE,EAAW,EAAKvO,MAAM4K,KAAK4D,MAAMC,aAAatI,GAClD,EAAKa,SAAS,CAAE+E,YAAawC,EAAUpI,SAAUA,EAAUC,SAAUA,IAAY,WAC/EnG,KAAKyM,oBAGRzI,OAAM,SAAUC,GACjBC,QAAQC,IAAIF,Q,oBAIlB,WACEwK,SAASC,SAASC,W,+DAGpB,uCAAAC,EAAA,6DACM9D,EAAW+D,IAAOC,mBAAmB,WACrCC,EAAW,IAAIF,IAAOG,SAAS,6CAA8CpD,EAAKd,GAFxF,SAG2BiE,EAASE,eAAejP,KAAKD,MAAM+L,aAH9D,OAGMoD,EAHN,OAIEhL,QAAQC,IAA6C,IAAzC0K,IAAON,MAAMY,YAAYD,IACrClP,KAAK+G,SAAS,CAAEY,QAASyH,QAAiD,IAAzCP,IAAON,MAAMY,YAAYD,IAAuBG,QAAQ,MAEzFvN,MAAMvC,EAAY,YAChB,CACEwC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBiB,KAAMiL,KAAKC,UAAU,CACnB,SAAYnO,KAAKD,MAAM+L,YACvB,UAAa9L,KAAKD,MAAMgM,cAEzB9J,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACe,MAAfA,EAAKgM,OACPlK,QAAQC,IAAI/B,EAAKgM,SAGjBlK,QAAQC,IAAI/B,EAAK8J,OACjB,EAAKnF,SAAS,CAAEmF,MAAOkD,OAAOhN,EAAK8J,aAEpClI,OAAM,SAAUC,GACjBC,QAAQC,IAAIF,MA5BlB,gD,gFAiCA,SAAaqL,GAAM,IAAD,OAChB5J,EAAO6J,KAAK,MAAMD,GACdtP,KAAKD,MAAMwE,cAEfL,QAAQC,IAAI,WACZrC,MAAMvC,EAAY,SAChB,CACEwC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBiB,KAAMiL,KAAKC,UAAU,CACnB,SAAYnO,KAAKD,MAAM+L,YACvB,IAAO9L,KAAKD,MAAMyB,IAClB,UAAaxB,KAAKD,MAAMgM,cAEzB9J,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACe,UAAfA,EAAKgM,QACP,EAAKtO,MAAMoH,MAAMsI,QAAQ,qBAAKtH,MAAO,CAAEuH,SAAU,OAAxB,kBAA6C,CACpElN,SAAUmN,IAAUC,SAEtB,EAAK5I,SAAS,CAAEmF,MAAO,EAAKnM,MAAMmM,MAAQ,MAC1CxG,EAAO6J,KAAK,OAAQ,CAAE5F,OAAQ,EAAK5J,MAAMmG,SAAU0D,QAAS,SAAUC,MAAO,EAAK9J,MAAMwM,cAElE,SAAfnK,EAAKgM,QACZ,EAAKtO,MAAMoH,MAAMmH,KAAK,MAAO,CAC3B9L,SAAUmN,IAAUE,eAEtB,EAAK7I,SAAS,CAAEmF,MAAO,EAAKnM,MAAMmM,MAAQ,MAG1C,EAAKpM,MAAMoH,MAAMmH,KAAKjM,EAAKgM,WAE5BpK,OAAM,SAAUC,GACjBC,QAAQC,IAAIF,S,sBAIlB,WAAY,IAAD,OACTnC,MAAMvC,EAAY,YAChB,CACEwC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBiB,KAAMiL,KAAKC,UAAU,CACnB,SAAYnO,KAAKD,MAAM+L,YACvB,IAAO9L,KAAKD,MAAMyB,IAClB,UAAaxB,KAAKD,MAAMgM,cAGzB9J,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACe,MAAfA,EAAKgM,OACP,EAAKtO,MAAMoH,MAAMmH,KAAKjM,EAAKgM,QAG3B,EAAKrH,SAAS,CAAEvF,IAAKY,EAAKZ,IAAK+C,aAAa,OAE7CP,OAAM,SAAUC,GACjBC,QAAQC,IAAIF,Q,0DAIlB,oCAAA2K,EAAA,6DAGMiB,EAAe,IAAI7P,KAAKD,MAAM4K,KAAK4C,IAAIyB,SAASpD,EAAK,8CAH3D,SAIsBlL,OAAOoP,SAASC,QAAQ,CAAEhO,OAAQ,wBAJxD,cAIMiO,EAJN,gBAKsBtP,OAAOoP,SAASC,QAAQ,CAAEhO,OAAQ,gBALxD,UAMiB,GANjB,+BAOI/B,KAAKF,MAAMoH,MAAMC,MAAM,iBAP3B,kCAUMa,EAAS6G,IAAON,MAAM0B,WAAWjQ,KAAKD,MAAMiI,QAAQkI,WACpDC,EAAY,CACdC,SAAU,KACVC,KAAML,EAAQ,GACd/I,MAAOe,GAELsI,EAAUtQ,KACd6P,EAAaU,QAAQC,QAAQxQ,KAAKD,MAAM+L,aAAa2E,KAAKN,GAAWzM,GAAG,mBAAmB,WACzF4M,EAAQxQ,MAAMoH,MAAMmH,KAAK,4BACzBiC,EAAQvJ,SAAS,CAAEqF,aAAc,OAEhC1I,GAAG,WAAW,SAACgN,GACdJ,EAAQxQ,MAAMoH,MAAMmH,KAAK,qBACzBiC,EAAQ7D,gBAvBd,oE,2EA4BA,WAAW,IAAD,OACR3K,MAAMvC,EAAY,YAChB,CACEwC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBiB,KAAMiL,KAAKC,UAAU,CACnB,IAAOnO,KAAKD,MAAMyB,IAClB,SAAYxB,KAAKD,MAAM+L,YACvB,SAAY9L,KAAKD,MAAMoG,SACvB,QAAWnG,KAAKD,MAAMyI,SACtB,UAAaxI,KAAKD,MAAMgM,UACxB,OAAU/L,KAAKD,MAAMiI,WAEtB/F,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACe,MAAfA,EAAKgM,OACP,EAAKtO,MAAMoH,MAAMmH,KAAKjM,EAAKgM,SAG3B,EAAKtO,MAAMoH,MAAMmH,KAAK,wBACtB,EAAKtH,SAAS,CAAEqF,aAAc,QAE/BpI,OAAM,SAAUC,GACjBC,QAAQC,IAAIF,Q,sBAIlB,WAAY,IAAD,OACTnC,MAAMvC,EAAY,YAChB,CACEwC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBiB,KAAMiL,KAAKC,UAAU,CACnB,SAAYnO,KAAKD,MAAM+L,YACvB,IAAO9L,KAAKD,MAAMyB,IAClB,UAAaxB,KAAKD,MAAMgM,cAEzB9J,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACe,MAAfA,EAAKgM,OACP,EAAKtO,MAAMoH,MAAMmH,KAAKjM,EAAKgM,SAG3B,EAAKrH,SAAS,CAAExC,aAAa,IAC7B,EAAKkI,iBAENzI,OAAM,SAAUC,GACjBC,QAAQC,IAAIF,Q,yBAIlB,WACE,IAAI0F,EAAiC,IAAvB3J,KAAKD,MAAMmG,SAAiB,QAAUlG,KAAKD,MAAMmG,SAC/DR,EAAO6J,KAAK,OAAQ,CAAE5F,OAAQA,EAAQC,QAAS5J,KAAKD,MAAMkK,YAAaJ,MAAO7J,KAAKD,MAAMwM,aACzFvM,KAAK+G,SAAS,CAAEkD,YAAa,O,8BAG/B,SAAiBnD,GACf9G,KAAK+G,SAAS,CAAEkD,YAAanD,EAAME,OAAOC,U,0BAG5C,SAAa0J,GACX3Q,KAAK+G,SAAS,CAAEqF,aAAcuE,M,uBAGhC,SAAU7J,GACR9G,KAAK+G,SAAS,CAAEiF,WAAYlF,EAAME,OAAOC,U,0BAG3C,SAAaH,GACX9G,KAAK+G,SAAS,CAAEiB,OAAQlB,EAAME,OAAOC,U,2BAGvC,SAAcH,GACZ9G,KAAK+G,SAAS,CAAEyB,SAAU1B,EAAME,OAAOC,U,oBAGzC,WACE,IAAM2J,EAAgB,CACpB,cAAC,EAAD,CACE9I,SAAU9H,KAAK8H,SACfD,OAAQ7H,KAAK6H,OACb3B,SAAUlG,KAAKD,MAAMmG,SACrByB,QAAS3H,KAAKD,MAAM4H,QAAU3H,KAAKD,MAAMmM,MACzCtE,aAAc5H,KAAK4H,eAErB,cAAC,EAAD,CACEE,SAAU9H,KAAK8H,SACf5B,SAAUlG,KAAKD,MAAMmG,SACrByB,QAAS3H,KAAKD,MAAM4H,QAAU3H,KAAKD,MAAMmM,MACzCtE,aAAc5H,KAAK4H,aACnBK,aAAcjI,KAAKiI,aACnBD,OAAQhI,KAAKD,MAAMiI,OACnBgE,WAAYhM,KAAKD,MAAMiM,WACvB3D,UAAWrI,KAAKqI,UAChBC,MAAOtI,KAAKsI,QAEd,cAAC,EAAD,CACER,SAAU9H,KAAK8H,SACf5B,SAAUlG,KAAKD,MAAMmG,SACrByB,QAAS3H,KAAKD,MAAM4H,QAAU3H,KAAKD,MAAMmM,MACzCtE,aAAc5H,KAAK4H,aACnBY,SAAUxI,KAAKD,MAAMyI,SACrBP,aAAcjI,KAAKiI,aACnBQ,cAAezI,KAAKyI,cACpBT,OAAQhI,KAAKD,MAAMiI,OACnBU,QAAS1I,KAAK0I,WAGlB,OACE,sBAAKpB,UAAU,OAAf,UACGtH,KAAKD,MAAMyM,YAAYnI,OAAS,GAC/B,qBAAKiD,UAAU,oBAAf,SACE,8BACE,8BACGtH,KAAKD,MAAMyM,YAAY/C,KAAI,SAACqD,GAC3B,OACE,8BACE,qBAAKxF,UAAU,eAAeY,MAAO,CAAE2I,gBAAiB,yBAAxD,SACG/D,eASjB,sBAAKxF,UAAU,QAAf,UACE,8CAC2B,IAA1BtH,KAAKD,MAAM+L,YAAoB,cAAC,EAAD,CAAO1E,MAAOpH,KAAKoH,MAAOC,SAAUrH,KAAKqH,WAAgBrH,KAAKD,MAAMwE,YAAc,KAAOqM,EAAc5Q,KAAKD,MAAMqM,iBAGlJpM,KAAKD,MAAMwE,aACX,cAAC,EAAD,CAAMiF,YAAaxJ,KAAKD,MAAMyJ,YAAaS,YAAajK,KAAKD,MAAMkK,YAAaC,WAAYlK,KAAK0M,iBAAkBtC,YAAapK,KAAKoK,YAAaN,OAAQA,IAE5J,cAAC,EAAD,CAAYmC,UAAWjM,KAAKD,MAAMkM,UAAWlI,aAAc/D,KAAK+D,aAAcQ,YAAavE,KAAKD,MAAMwE,YAAamB,OAAQA,IAC3H,sBAAKwC,MAAO,CAAE3F,SAAU,WAAY4G,KAAM,MAAO2H,IAAK,MAAO/L,gBAAiB,YAAagM,aAAc,MAAOC,OAAQ,OAAQnH,MAAO,QAASoH,QAAS,OAAzJ,UACE,6BAAKjR,KAAKD,MAAMkM,YADlB,aAGA,sBAAK/D,MAAO,CAAE3F,SAAU,WAAY2O,MAAO,MAAOJ,IAAK,MAAO/L,gBAAiB,YAAagM,aAAc,MAAOC,OAAQ,OAAQnH,MAAO,QAASoH,QAAS,OAA1J,oBAEA,6BAAKjR,KAAKD,MAAM4H,QAAU3H,KAAKD,MAAMmM,WACpClM,KAAKD,MAAMwE,YACV,qBAAKiD,QAASxH,KAAK2M,SAAUzE,MAAO,CAAE3F,SAAU,WAAY2O,MAAO,MAAO9H,OAAQ,MAAOrE,gBAAiB,YAAagM,aAAc,MAAOC,OAAQ,OAAQnH,MAAO,QAASoH,QAAS,OAArL,uBAEE,Y,GA/eOjL,aAqfJyB,gBAAYoE,GCnfZsF,E,4JAhBb,WACE,OACE,qBAAK7J,UAAU,MAAf,SACA,cAAC,IAAD,UACA,gCACE,cAAC8J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACzR,GAAD,OAAW,cAAC,EAAD,eAAUA,OAEnD,cAACsR,EAAA,EAAD,CAAOE,KAAK,YAAYC,OAAQ,SAACzR,GAAD,OAAW,cAAC,EAAD,eAAgBA,kB,GARjDkG,a,SCKEwL,QACW,cAA7B9Q,OAAOgO,SAAS+C,UAEe,UAA7B/Q,OAAOgO,SAAS+C,UAEhB/Q,OAAOgO,SAAS+C,SAASC,MACvB,2DCHNC,IAASJ,OAAO,cAAC,IAAD,yBAAeK,SAAUC,KAPzB,CACdtP,SAAU,gBACVuP,QAAS,IACTC,OAAQ,OACRC,WAAY,SAGE,aAAqD,cAAC,EAAD,OAAyBvD,SAASwD,eAAe,SDkHhH,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnQ,MAAK,SAAAoQ,GACjCA,EAAaC,kB","file":"static/js/main.76deec4f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Phaser from 'phaser';\r\nimport serverURL from './constansts';\r\nimport './App.css';\r\n\r\nvar game;\r\n//var balloonCount = getRandomInt(3,5);\r\nvar balloonCount = 3;\r\nvar balloonDirection = [];\r\nvar balloonSpeed = [];\r\nvar balloonAngular = [];\r\nvar balloonPosition = [];\r\nvar balloonStartX = [];\r\n\r\nvar balloons = [];\r\n\r\nclass GameScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      game: null,\r\n    }\r\n\r\n    //this.create = this.create.bind(this);\r\n  }\r\n\r\n  preload() {\r\n    this.load.image('background', './phaser/Background.png');\r\n    //this.load.image('balloon', './phaser/Balloon Pop.png');\r\n    this.load.spritesheet('balloon',\r\n      './phaser/Balloon Pop.png',\r\n      { frameWidth: 390, frameHeight: 481 }\r\n    );\r\n    this.load.image('cloudBack', './phaser/Clouds_03_Back.png');\r\n    this.load.image('cloudMid', './phaser/Clouds_02_Middle.png');\r\n    this.load.image('cloudFront', './phaser/Clouds_01_Front.png');\r\n  }\r\n\r\n  create() {\r\n    //console.log(game);\r\n    //game.stage.backgroundColor = \"#4488AA\";\r\n    let bg = this.add.sprite(0, 0, 'background');\r\n    bg.displayWidth = window.innerWidth;\r\n    bg.displayHeight = window.innerHeight;\r\n    bg.setOrigin(0, 0);\r\n\r\n    this.cloudBack = this.add.tileSprite(window.innerWidth / 2, window.innerHeight / 2, window.innerWidth, window.innerHeight, 'cloudBack');\r\n    this.cloudBack.setScale(1);\r\n    this.cloudBack.tileScaleX = 0.5;\r\n    this.cloudBack.tileScaleY = 0.6;\r\n\r\n    this.cloudMid = this.add.tileSprite(window.innerWidth / 2, window.innerHeight / 2, window.innerWidth, window.innerHeight, 'cloudMid');\r\n    this.cloudMid.setScale(1);\r\n    this.cloudMid.tileScaleX = 0.5;\r\n    this.cloudMid.tileScaleY = 0.6;\r\n\r\n    this.cloudFront = this.add.tileSprite(window.innerWidth / 2, window.innerHeight / 2, window.innerWidth, window.innerHeight, 'cloudFront');\r\n    this.cloudFront.setScale(1);\r\n    this.cloudFront.tileScaleX = 0.5;\r\n    this.cloudFront.tileScaleY = 0.6;\r\n\r\n    this.anims.create({\r\n      key: 'idle',\r\n      frames: this.anims.generateFrameNumbers('balloon', { start: 0, end: 0 }),\r\n      frameRate: 64\r\n      //repeat: -1\r\n    });\r\n\r\n    this.anims.create({\r\n      key: 'pop',\r\n      frames: this.anims.generateFrameNumbers('balloon', { start: 0, end: 16 }),\r\n      frameRate: 96\r\n      //repeat: -1\r\n    });\r\n\r\n    fetch(serverURL + 'getballoon/',\r\n      {\r\n        method: 'get',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        }\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        balloonAngular = data.angular;\r\n        balloonSpeed = data.speed;\r\n        balloonPosition = data.position;\r\n        balloonDirection = data.direction;\r\n        balloonStartX = data.start;\r\n\r\n        for (let i = 0; i < balloonCount; i++) {\r\n          let balloon = this.physics.add.sprite(balloonPosition[i].x * window.innerWidth, balloonPosition[i].y * window.innerHeight, 'balloon', { ignoreGravity: false }).setInteractive();\r\n          balloons.push(balloon);\r\n          balloons[i].displayWidth = 140;\r\n          balloons[i].displayHeight = 200;\r\n\r\n          balloons[i].body.allowGravity = false;\r\n          balloons[i].setBounce(0, 0);\r\n          balloons[i].setAcceleration(0, 0);\r\n          balloons[i].setCollideWorldBounds(false);\r\n          balloons[i].body.setGravityY(0);\r\n          balloons[i].setVelocity(0, 0);\r\n          balloons[i].body.angularVelocity = balloonAngular[i];\r\n          balloons[i].body.angularDrag = 0;\r\n          balloons[i].on('pointerdown', function (e) {\r\n            let p = e.downElement.closest(\".Chat\");\r\n            if (p !== null)\r\n              return;\r\n            if (game.started) {\r\n              game.clickBalloon(i);\r\n            }\r\n            // balloons[i].anims.play(\"pop\", true);\r\n            /*balloons[i].on('animationcomplete', (animation, frame) => {\r\n              if (animation.key == \"pop\") {\r\n                balloons[i].x = balloonStartX[i] * window.innerWidth;\r\n                balloons[i].y = window.innerHeight;\r\n                balloonDirection[i].x = balloonDirection[i].x * -1;\r\n                balloons[i].anims.play(\"idle\", true);\r\n              }\r\n            }, this);*/\r\n          });\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n\r\n  update() {\r\n    this.cloudBack.tilePositionX -= 0.15;\r\n    this.cloudMid.tilePositionX += 0.3;\r\n    this.cloudFront.tilePositionX -= 0.75;\r\n    if(balloons.length == balloonCount)\r\n    {\r\n      for (let i = 0; i < balloonCount; i++) {\r\n        balloons[i].x = window.innerWidth * balloonPosition[i].x;\r\n        balloons[i].y = window.innerHeight * balloonPosition[i].y;\r\n\r\n        balloonPosition[i].x += balloonDirection[i].x * balloonSpeed[i].x;\r\n        balloonPosition[i].y += balloonDirection[i].y * balloonSpeed[i].y;\r\n        if (balloonPosition[i].x > 1) {\r\n          balloonPosition[i].x = 0;\r\n        }\r\n        else if (balloonPosition[i].x < 0) {\r\n          balloonPosition[i].x = 1;\r\n        }\r\n        if (balloonPosition[i].y < 0) {\r\n          balloonPosition[i].y = 1;\r\n          balloonPosition[i].x = balloonPosition[i].x;\r\n          balloonDirection[i].x = balloonDirection[i].x * -1;\r\n        }\r\n        balloons[i].setVelocity(0, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    game.clickBalloon = nextProps.clickBalloon;\r\n    game.started = nextProps.gameStarted;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let gameScene = new Phaser.Scene(game);\r\n    var config = {\r\n      type: Phaser.AUTO,\r\n      parent: 'phaser-parent',\r\n      pixelArt: false,\r\n      backgroundColor: 'rgba(176, 55, 110,0.5)',\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n          gravity: { y: 200 },\r\n          debug: false\r\n        }\r\n      },\r\n      scene: {\r\n        preload: this.preload,\r\n        create: this.create,\r\n        update: this.update\r\n      }\r\n    };\r\n    game = new Phaser.Game(config);\r\n    console.log(game)\r\n    game.clickBalloon = this.props.clickBalloon;\r\n    game.started = this.props.gameStarted;\r\n\r\n    /*\r\n    this.props.socket.on(\"SETBALLOONS\", datas => {\r\n      balloonAngular = datas.angular;\r\n      balloonSpeed = datas.speed;\r\n      balloonPosition = datas.position;\r\n      balloonDirection = datas.direction;\r\n      balloonStartX = datas.start;\r\n    });\r\n    */\r\n    this.props.socket.on(\"POP\", data => {\r\n      var index = data.index;\r\n\r\n      balloons[index].play(\"pop\");\r\n      balloons[index].on('animationcomplete', (animation, frame) => {\r\n        if (animation.key == \"pop\") {\r\n          /*\r\n          balloons[index].x = balloonStartX[index] * window.innerWidth;\r\n          balloons[index].y = window.innerHeight;\r\n          */\r\n          balloons[index].anims.play(\"idle\", true);\r\n        }\r\n      }, this);\r\n    });\r\n    this.props.socket.on(\"RESETBALLOON\",data=>{\r\n      balloonSpeed = data.speed;\r\n      balloonPosition = data.position;\r\n      balloonDirection = data.direction;\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"phaser-parent\">\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameScreen;\r\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","//const serverURL = \"http://localhost:5001/\"// local dev\r\nconst serverURL = \"http://cryptopop.fun:5001/\"// server deploy\r\n\r\nexport default serverURL;","import React, { Component } from 'react';\r\nimport { positions, withAlert } from 'react-alert'\r\nimport './App.css';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      email: \"\",\r\n      isLogin: false,\r\n      isRegister: false,\r\n    };\r\n    this.handleUsername = this.handleUsername.bind(this);\r\n    this.handlePassword = this.handlePassword.bind(this);\r\n    this.handleEmail = this.handleEmail.bind(this);\r\n\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n    //this.create = this.create.bind(this);\r\n  }\r\n\r\n  handleUsername(event) {\r\n    this.setState({ username: event.target.value })\r\n  }\r\n\r\n  handlePassword(event) {\r\n    this.setState({ password: event.target.value })\r\n  }\r\n\r\n  handleEmail(event) {\r\n    this.setState({ email: event.target.value })\r\n  }\r\n\r\n  handleLogin() {\r\n    if (this.state.isLogin) {\r\n      if(this.state.username == \"\")\r\n      {\r\n        this.props.alert.error(\"Input username\");\r\n        return;\r\n      }\r\n      this.props.login(this.state.username, this.state.password);\r\n    }\r\n    else {\r\n      this.setState({ isLogin: true });\r\n    }\r\n  }\r\n\r\n  handleBack() {\r\n    this.setState({ isLogin: false, isRegister: false });\r\n  }\r\n\r\n  handleRegister() {\r\n    if (this.state.isRegister) {\r\n      if(this.state.username == \"\")\r\n      {\r\n        this.props.alert.error(\"Input username\");\r\n        return;\r\n      }\r\n      this.props.register(this.state.username, this.state.email, this.state.password);\r\n    }\r\n    else {\r\n      this.setState({ isRegister: true });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        { (this.state.isLogin || this.state.isRegister) &&\r\n          <>\r\n            <p>Username</p>\r\n            <input value={this.state.username} onChange={this.handleUsername} />\r\n            <br />\r\n            {this.state.isRegister && (\r\n              <>\r\n                <p>Email</p>\r\n                <input value={this.state.email} onChange={this.handleEmail} />\r\n                <br />\r\n              </>)\r\n            }\r\n            <p>Password</p>\r\n            <input type=\"password\" value={this.state.password} onChange={this.handlePassword} />\r\n            <br /><br />\r\n          </>\r\n        }\r\n        { (this.state.isRegister || this.state.isLogin) &&\r\n          <>\r\n            <button className=\"midnight-blue-flat-button\" onClick={this.handleBack}>BACK</button>\r\n            <div className=\"divider\" />\r\n          </>\r\n        }\r\n        { !this.state.isRegister &&\r\n          <>\r\n            <button className=\"midnight-blue-flat-button\" onClick={this.handleLogin}>LOGIN</button>\r\n            <div className=\"divider\" />\r\n          </>\r\n        }\r\n        { !this.state.isLogin &&\r\n          <button className=\"midnight-blue-flat-button\" onClick={this.handleRegister}>REGISTER</button>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAlert()(Login);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass Profile extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n\r\n        <p>Welcome {this.props.username}!</p>\r\n        <p>Current Balance:</p>\r\n        <h2>{this.props.balance}uETH</h2>\r\n\r\n        <button onClick={() => this.props.handlePanels(1)} className=\"midnight-blue-flat-button\">Top Up</button>\r\n        <div className=\"divider\" />\r\n        {this.props.balance > 0 &&\r\n          <button onClick={() => this.props.handlePanels(2)} className=\"midnight-blue-flat-button\">Cash Out</button>\r\n        }\r\n        <br /><br /><br /><br />\r\n        <button onClick={this.props.logOut} className=\"midnight-blue-flat-button\">Quit</button>\r\n        <div className=\"divider\" />\r\n        <button onClick={this.props.joinGame} className=\"midnight-blue-flat-button\">JOIN GAME</button>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass TopUp extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n\r\n        <p>Welcome {this.props.username}!</p>\r\n        <p>Current Balance: {this.props.balance}</p>\r\n        <br/><br/>\r\n        <p>Amount</p>\r\n        <input value={this.props.amount} onChange={this.props.handleAmount} type=\"number\"/>\r\n        <br/><br/>\r\n        <p style={{display: \"none\"}}>Private Key</p>\r\n        <input value={this.props.privatekey} onChange={this.props.handleKey} style={{width: \"100%\",display: \"none\"}}/>\r\n        <br/><br/>\r\n        <button onClick={() => this.props.handlePanels(0)} className=\"midnight-blue-flat-button\">Back</button>\r\n        <div className=\"divider\"/>\r\n        <button onClick={this.props.topUp} className=\"midnight-blue-flat-button\">Top Up</button>\r\n        <br/><br/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopUp;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass CashOut extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n\r\n        <p>Welcome {this.props.username}!</p>\r\n        <p>Current Balance: {this.props.balance}</p>\r\n        <br/><br/>\r\n        <p>Amount</p>\r\n        <input value={this.props.amount} onChange={this.props.handleAmount} type=\"number\"/>\r\n        <br/><br/>\r\n        <p>Receiving Address</p>\r\n        <input value={this.props.coinbase} onChange={this.props.handleAddress}/>\r\n        <br/><br/>\r\n        <button onClick={() => this.props.handlePanels(0)} className=\"midnight-blue-flat-button\">Back</button>\r\n        <div className=\"divider\"/>\r\n        <button onClick={this.props.cashOut} className=\"midnight-blue-flat-button\">Cash Out</button>\r\n        <br/><br/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CashOut;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messagesEndRef: React.createRef()\r\n    };\r\n    this.scrollToBottom = this.scrollToBottom.bind(this);\r\n  }\r\n  componentDidMount (){\r\n    this.scrollToBottom();\r\n  }\r\n  componentDidUpdate (){\r\n    this.scrollToBottom();\r\n  }\r\n  scrollToBottom () {\r\n    this.state.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Chat\" style={{position: \"absolute\", left: \"0px\", bottom: \"0px\", backgroundColor: \"#00000052\", width: \"350px\"}}>\r\n\r\n        <div style={{height: \"300px\", textAlign: \"left\", overflow: \"auto\", overflowWrap: \"break-word\"}}>\r\n          { this.props.messageList.map((o) => {\r\n                if(o.sender == 'date-separator')\r\n                  return (<div style={{ textAlign:'center' }}>----------{o.message}----------</div>)\r\n                else\r\n                  return(<div className='message-div' style={{ color: this.props.colors[o.color]}}>{o.sender}: {o.message} <div className='date'>{o.timestring}</div></div>)\r\n              }\r\n            )\r\n          }\r\n          <div ref={this.state.messagesEndRef} />\r\n        </div>\r\n        <input\r\n        value={this.props.chatMessage}\r\n        onChange={this.props.handleChat}\r\n        onKeyPress ={(e) => {if(e.key === 'Enter') this.props.sendMessage()}}\r\n        style={{position: \"relative\", bottom: \"0px\", width: \"85%\"}}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","import Web3 from 'web3'\r\n\r\nlet getWeb3 = new Promise(function(resolve, reject) {\r\n  // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n  window.addEventListener('load', function() {\r\n    var results = {};\r\n    var web3 = window.web3\r\n\r\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\r\n    if (typeof web3 !== 'undefined') {\r\n      // Use Mist/MetaMask's provider.\r\n      web3 = new Web3(web3.currentProvider)\r\n      results.web3 = web3;\r\n      console.log('Injected web3 detected.');\r\n      resolve(results)\r\n    } else {\r\n      // Fallback to localhost if no web3 injection. We've configured this to infura\r\n      var provider = new Web3.providers.HttpProvider('http://ropsten.infura.io/vKci4bjCOf3x7jLLQRWs')\r\n      web3 = new Web3(provider)\r\n      results.web3 = web3;\r\n      console.log('No web3 instance injected, using Local web3.');\r\n      resolve(results)\r\n      }\r\n  })\r\n});\r\n\r\nexport default getWeb3\r\n","let getRandomInt = (min, max)=>{\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nlet getTimeString = (date) => {\r\n    return date.toLocaleTimeString();\r\n    return (date.getHours()+1).toString().padStart(2,'0')+':'+(date.getMinutes()).toString().padStart(2,'0');\r\n}\r\nexport default getRandomInt;\r\nexport { getTimeString };","import React, { Component } from 'react';\r\nimport { positions, withAlert } from 'react-alert'\r\nimport GameScreen from './GameScreen';\r\nimport Login from './Login';\r\nimport Profile from './Profile';\r\nimport TopUp from './TopUp';\r\nimport CashOut from './CashOut';\r\nimport Chat from './Chat'\r\nimport './App.css';\r\nimport getWeb3 from './getWeb3';\r\nimport { ethers } from 'ethers';\r\nimport openSocket from 'socket.io-client';\r\nimport getRandomInt from './utils';\r\nimport { getTimeString } from './utils';\r\nimport serverURL from './constansts';\r\nconst socket = openSocket(serverURL);//, {transports: ['websocket', 'polling'], secure: false});\r\n\r\n\r\nconst abi = [{ \"constant\": false, \"inputs\": [{ \"name\": \"amount\", \"type\": \"uint256\" }, { \"name\": \"user\", \"type\": \"bytes32\" }, { \"name\": \"userAddress\", \"type\": \"address\" }, { \"name\": \"newBalance\", \"type\": \"uint256\" }], \"name\": \"withdraw\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"\", \"type\": \"bytes32\" }], \"name\": \"PlayerBalances\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"sender\", \"type\": \"address\" }], \"name\": \"changeAdmin\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"user\", \"type\": \"bytes32\" }], \"name\": \"deposit\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"admin\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"constructor\" }];\r\n\r\nconst colors = ['#f72585', '#b5179e', '#7209b7', '#560bad', '#480ca8', '#ffadad', '#57cc99', '#80ed99', '#ff0a54', '#ff477e', '#ff5c8a', '#004b23', '#006400', '#007200', '#38b000', '#ff7b00', '#ff9500', '#ffb700'];\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      web3: null,\r\n      currentUser: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      sessionId: \"\",\r\n      coinbase: \"\",\r\n      privateKey: \"\",\r\n      key: null,\r\n      userCount: 0,\r\n      balance: 0,\r\n      spent: 0,\r\n      gameStarted: false,\r\n      forcePop: false,\r\n      currentPanel: 0,\r\n      amount: 0,\r\n      messageList: [{ sender: \"GM\", message: \"Welcome to Balloon Game!\", date: new Date().getUTCMilliseconds(), timestring: getTimeString(new Date()) }],\r\n      chatMessage: \"\",\r\n      colorIndex: 0,\r\n      boomMsgList: []\r\n    }\r\n\r\n    this.login = this.login.bind(this)\r\n    this.logOut = this.logOut.bind(this)\r\n    this.register = this.register.bind(this)\r\n    this.getBalance = this.getBalance.bind(this)\r\n    this.handlePanels = this.handlePanels.bind(this)\r\n    this.handleKey = this.handleKey.bind(this)\r\n    this.handleAmount = this.handleAmount.bind(this)\r\n    this.handleAddress = this.handleAddress.bind(this)\r\n    this.handleMessageBox = this.handleMessageBox.bind(this)\r\n    this.joinGame = this.joinGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.sendMessage = this.sendMessage.bind(this)\r\n    this.topUp = this.topUp.bind(this)\r\n    this.cashOut = this.cashOut.bind(this)\r\n    this.clickBalloon = this.clickBalloon.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    var that = this;\r\n\r\n    socket.on('connect', function () {\r\n      console.log(\"connected\")\r\n      that.setState({ sessionId: socket.id })\r\n    });\r\n    socket.on(\"ADD\", message => {\r\n      console.log(message);\r\n      that.setState({ userCount: message.count });\r\n    });\r\n    socket.on(\"POP\", message => {\r\n      console.log(message);\r\n      that.setState({ forcePop: true });\r\n    });\r\n    socket.on(\"CheckBalance\", message => {\r\n      console.log(message);\r\n      that.getBalance();\r\n    });\r\n    socket.on(\"CHAT\", message => {\r\n      if (message.message === \"I won.\" && message.sender !== this.state.username) {\r\n        /* this.props.alert.success(<div style={{ fontSize: '1.5em', wordBreak: 'break-all' }}>{message.sender} won +100.</div>, {\r\n          position: positions.MIDDLE\r\n        }); */\r\n        var boomMsg = message.sender + \": Just won +100\";\r\n        var that = this;\r\n        var boomMsgList = this.state.boomMsgList;\r\n        boomMsgList.push(boomMsg);\r\n        this.setState({ boomMsgList: boomMsgList });\r\n        console.log(this.state.boomMsgList);\r\n        setTimeout(function () {\r\n          var boomMsgList1 = that.state.boomMsgList;\r\n          boomMsgList1.pop();\r\n          that.setState({ boomMsgList: boomMsgList1 });\r\n        }, 5000);\r\n      }\r\n      if (message.message === \"I won.\") {\r\n        message.message = 'I just won +100.';\r\n      }\r\n\r\n      var msg = this.state.messageList;\r\n\r\n      var date = new Date(message.date);\r\n\r\n      if (msg.length == 1) {\r\n        var t_msg = { sender: 'date-separator', date: message.date, message: date.toLocaleDateString() };\r\n        msg.push(t_msg);\r\n      }\r\n      else {\r\n        var predate = new Date(msg[msg.length - 1].date);\r\n        if (date.toLocaleDateString() != predate.toLocaleDateString()) {\r\n          var t_msg = { sender: 'date-separator', date: message.date, message: date.toLocaleDateString() };\r\n          msg.push(t_msg);\r\n        }\r\n      }\r\n\r\n      msg.push({ sender: message.sender, message: message.message, color: message.color, date: message.date, timestring: getTimeString(date) });\r\n      this.setState({ messageList: msg });\r\n    });\r\n    socket.on(\"HISTORY\", messages => {\r\n      var msg = that.state.messageList;\r\n      if (msg.length > 1)\r\n        return;\r\n      for (var i = 0; i < messages.length; i++) {\r\n        var message = messages[i];\r\n        var date = new Date(message.date);\r\n        if (i == 0) {\r\n          var t_msg = { sender: 'date-separator', date: message.date, message: date.toLocaleDateString() };\r\n          msg.push(t_msg);\r\n        }\r\n        else {\r\n          var predate = new Date(messages[i - 1].date);\r\n          if (date.toLocaleDateString() != predate.toLocaleDateString()) {\r\n            var t_msg = { sender: 'date-separator', date: message.date, message: date.toLocaleDateString() };\r\n            msg.push(t_msg);\r\n          }\r\n        }\r\n        if (message.message === 'I won.') {\r\n          message.message = 'I just won +100.';\r\n        }\r\n        if (message.message !== \"I won.\") {\r\n          msg.push({ sender: message.sender, message: message.message, color: message.color, date: message.date, timestring: getTimeString(date) });\r\n        }\r\n      }\r\n      that.setState({ messageList: msg });\r\n    });\r\n\r\n    getWeb3.then(results => {\r\n      this.setState({ web3: results.web3 })\r\n      var that = this;\r\n      results.web3.eth.getAccounts((error, accounts) => {\r\n        if (accounts && accounts.length != 0) {\r\n          this.setState({ coinbase: accounts[0] })\r\n        }\r\n        if (localStorage.getItem('defaultWallet') && localStorage.getItem('defaultWallet').length > 30) {\r\n          var cb = localStorage.getItem('defaultWallet');\r\n          var k = localStorage.getItem('defaultKey')\r\n          if (k.length > 32) {\r\n            k = k.substr(2, k.length - 1)\r\n          }\r\n          this.setState({ coinbase: cb, pKey: k });\r\n          let x = results.web3.eth.accounts.privateKeyToAccount(localStorage.getItem('defaultKey'));\r\n          //console.log(results.web3.eth.accounts.wallet.add(x));\r\n          console.log(x)\r\n          console.log(results.web3.eth.accounts.wallet)\r\n        }\r\n      }).catch(() => { console.log('Error finding web3.') });\r\n    });\r\n\r\n    this.setState({ colorIndex: getRandomInt(0, colors.length) });\r\n  }\r\n\r\n  register(username, email, password) {\r\n    console.log(\"Registering...\")\r\n    fetch(serverURL + 'register/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": username,\r\n          \"email\": email,\r\n          \"password\": password\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.login(username, password);\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  login(username, password) {\r\n    fetch(serverURL + 'login/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        //mode: \"no-cors\",\r\n        body: JSON.stringify({\r\n          \"username\": username,\r\n          \"password\": password,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          var userhash = this.state.web3.utils.soliditySha3(username);\r\n          this.setState({ currentUser: userhash, username: username, password: password }, function () {\r\n            this.getBalance();\r\n          });\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  logOut() {\r\n    document.location.reload();\r\n  }\r\n\r\n  async getBalance() {\r\n    let provider = ethers.getDefaultProvider('ropsten');\r\n    let contract = new ethers.Contract(\"0x7Af6faCB28061cFEb5f7D6538B4d63988C8AeE66\", abi, provider);\r\n    let currentValue = await contract.PlayerBalances(this.state.currentUser);\r\n    console.log(ethers.utils.formatEther(currentValue) * 10000)\r\n    this.setState({ balance: Number((ethers.utils.formatEther(currentValue) * 10000).toFixed(0)) })\r\n\r\n    fetch(serverURL + 'balances/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          console.log(data.status)\r\n        }\r\n        else {\r\n          console.log(data.spent)\r\n          this.setState({ spent: Number(data.spent) });\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n\r\n  }\r\n\r\n  clickBalloon(idx) {    \r\n    socket.emit(\"POP\",idx);\r\n    if(!this.state.gameStarted)\r\n      return;\r\n    console.log(\"CLICKED\")\r\n    fetch(serverURL + 'click/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"key\": this.state.key,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status == \"Winner\") {\r\n          this.props.alert.success(<div style={{ fontSize: '2em' }}>+100</div>, {\r\n            position: positions.MIDDLE\r\n          });\r\n          this.setState({ spent: this.state.spent + 100 });\r\n          socket.emit(\"CHAT\", { sender: this.state.username, message: \"I won.\", color: this.state.colorIndex });\r\n        }\r\n        else if (data.status == \"Loser\") {\r\n          this.props.alert.show(\"-10\", {\r\n            position: positions.BOTTOM_RIGHT\r\n          });\r\n          this.setState({ spent: this.state.spent - 10 });\r\n        }\r\n        else {\r\n          this.props.alert.show(data.status)\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  joinGame() {\r\n    fetch(serverURL + 'joinGame/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"key\": this.state.key,\r\n          \"sessionId\": this.state.sessionId\r\n\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.setState({ key: data.key, gameStarted: true });\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  async topUp() {\r\n    //if(key.substr(0,2) != \"0x\")\r\n    //key = \"0x\" + this.state.privateKey;\r\n    let mainContract = new this.state.web3.eth.Contract(abi, \"0x7Af6faCB28061cFEb5f7D6538B4d63988C8AeE66\");\r\n    let account = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n    let chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n    if (chainId != 3) {\r\n      this.props.alert.error(\"Wrong network\");\r\n      return;\r\n    }\r\n    let amount = ethers.utils.parseEther(this.state.amount).toString();\r\n    let overrides = {\r\n      gasLimit: 53000,\r\n      from: account[0],\r\n      value: amount,\r\n    };\r\n    let thisObj = this;\r\n    mainContract.methods.deposit(this.state.currentUser).send(overrides).on('transactionHash', function () {\r\n      thisObj.props.alert.show(\"Please Await Transaction\")\r\n      thisObj.setState({ currentPanel: 0 })\r\n    })\r\n      .on('receipt', (res) => {\r\n        thisObj.props.alert.show(\"Deposit Confirmed\")\r\n        thisObj.getBalance()\r\n      });\r\n    return;\r\n  }\r\n\r\n  cashOut() {\r\n    fetch(serverURL + 'withdraw/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"key\": this.state.key,\r\n          \"username\": this.state.currentUser,\r\n          \"password\": this.state.password,\r\n          \"address\": this.state.coinbase,\r\n          \"sessionId\": this.state.sessionId,\r\n          \"amount\": this.state.amount\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.props.alert.show(\"Withdrawal Confirmed\")\r\n          this.setState({ currentPanel: 0 })\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  quitGame() {\r\n    fetch(serverURL + 'quitGame/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"key\": this.state.key,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.setState({ gameStarted: false });\r\n          this.getBalance();\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  sendMessage() {\r\n    var sender = (this.state.username == \"\" ? \"Guest\" : this.state.username);\r\n    socket.emit(\"CHAT\", { sender: sender, message: this.state.chatMessage, color: this.state.colorIndex })\r\n    this.setState({ chatMessage: \"\" })\r\n  }\r\n\r\n  handleMessageBox(event) {\r\n    this.setState({ chatMessage: event.target.value })\r\n  }\r\n\r\n  handlePanels(val) {\r\n    this.setState({ currentPanel: val })\r\n  }\r\n\r\n  handleKey(event) {\r\n    this.setState({ privateKey: event.target.value })\r\n  }\r\n\r\n  handleAmount(event) {\r\n    this.setState({ amount: event.target.value })\r\n  }\r\n\r\n  handleAddress(event) {\r\n    this.setState({ coinbase: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const profilePanels = [\r\n      <Profile\r\n        joinGame={this.joinGame}\r\n        logOut={this.logOut}\r\n        username={this.state.username}\r\n        balance={this.state.balance + this.state.spent}\r\n        handlePanels={this.handlePanels}\r\n      />,\r\n      <TopUp\r\n        joinGame={this.joinGame}\r\n        username={this.state.username}\r\n        balance={this.state.balance + this.state.spent}\r\n        handlePanels={this.handlePanels}\r\n        handleAmount={this.handleAmount}\r\n        amount={this.state.amount}\r\n        privateKey={this.state.privateKey}\r\n        handleKey={this.handleKey}\r\n        topUp={this.topUp}\r\n      />,\r\n      <CashOut\r\n        joinGame={this.joinGame}\r\n        username={this.state.username}\r\n        balance={this.state.balance + this.state.spent}\r\n        handlePanels={this.handlePanels}\r\n        coinbase={this.state.coinbase}\r\n        handleAmount={this.handleAmount}\r\n        handleAddress={this.handleAddress}\r\n        amount={this.state.amount}\r\n        cashOut={this.cashOut}\r\n      />\r\n    ]\r\n    return (\r\n      <div className=\"Home\">\r\n        {this.state.boomMsgList.length > 0 &&\r\n          <div className='boom-message-list'>\r\n            <div>\r\n              <div>\r\n                {this.state.boomMsgList.map((boomMsg) => {\r\n                  return (\r\n                    <div>\r\n                      <div className='boom-message' style={{ backgroundImage: 'url(/images/boom.png)' }}>\r\n                        {boomMsg}\r\n                      </div>\r\n                    </div>);\r\n                })\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n        <div className=\"Panel\">\r\n          <h1>Balloon Game</h1>\r\n          {this.state.currentUser == \"\" ? <Login login={this.login} register={this.register} /> : (this.state.gameStarted ? null : profilePanels[this.state.currentPanel])}\r\n        </div>\r\n        {\r\n          this.state.gameStarted &&\r\n          <Chat messageList={this.state.messageList} chatMessage={this.state.chatMessage} handleChat={this.handleMessageBox} sendMessage={this.sendMessage} colors={colors} />\r\n        }\r\n        <GameScreen userCount={this.state.userCount} clickBalloon={this.clickBalloon} gameStarted={this.state.gameStarted} socket={socket}/>\r\n        <div style={{ position: \"absolute\", left: \"0px\", top: \"0px\", backgroundColor: \"#00000052\", borderRadius: \"5px\", margin: \"10px\", color: \"white\", padding: \"5px\" }}>\r\n          <h1>{this.state.userCount}</h1>\r\n        Players</div>\r\n        <div style={{ position: \"absolute\", right: \"0px\", top: \"0px\", backgroundColor: \"#00000052\", borderRadius: \"5px\", margin: \"10px\", color: \"white\", padding: \"5px\" }}>\r\n          Balance\r\n        <h1>{this.state.balance + this.state.spent}</h1></div>\r\n        {this.state.gameStarted ?\r\n          <div onClick={this.quitGame} style={{ position: \"absolute\", right: \"0px\", bottom: \"0px\", backgroundColor: \"#00000052\", borderRadius: \"5px\", margin: \"10px\", color: \"white\", padding: \"5px\" }}>\r\n            Quit Game</div>\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAlert()(Home);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Home.js';\nimport GameScreen from './GameScreen.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Router>\n      <div>\n        <Route exact path='/' render={(props) => <Home {...props}\n        />}/>\n        <Route path='/exchange' render={(props) => <GameScreen {...props}\n        /> }/>\n        </div>\n      </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport * as serviceWorker from './serviceWorker';\n\nconst options = {\n  position: 'bottom center',\n  timeout: 5000,\n  offset: '30px',\n  transition: 'fade',\n}\n\nReactDOM.render(<AlertProvider template={AlertTemplate} {...options}><App /></AlertProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}