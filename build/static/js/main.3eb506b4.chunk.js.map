{"version":3,"sources":["GameScreen.js","logo.svg","utils.js","Login.js","Profile.js","TopUp.js","CashOut.js","Chat.js","getWeb3.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["game","getTimeString","date","toLocaleTimeString","getRandomInt","min","max","Math","ceil","floor","random","balloonCount","balloonsDirection","GameScreen","props","state","this","load","image","spritesheet","frameWidth","frameHeight","bg","add","sprite","displayWidth","window","innerWidth","displayHeight","innerHeight","setOrigin","cloudBack","tileSprite","setScale","tileScaleX","tileScaleY","cloudMid","cloudFront","balloons","anims","create","key","frames","generateFrameNumbers","start","end","frameRate","i","balloon","physics","ignoreGravity","setInteractive","push","speedX","speedY","body","allowGravity","setBounce","setAcceleration","setCollideWorldBounds","setGravityY","setVelocity","angularVelocity","angularDrag","on","e","downElement","closest","started","clickBalloon","play","animation","frame","x","y","pow","tilePositionX","nextProps","gameStarted","Phaser","Scene","config","type","AUTO","parent","pixelArt","backgroundColor","width","height","default","arcade","gravity","debug","scene","preload","update","Game","console","log","id","Component","Login","username","password","email","isLogin","isRegister","handleUsername","bind","handlePassword","handleEmail","handleLogin","handleRegister","handleBack","event","setState","target","value","alert","error","login","register","className","onChange","onClick","withAlert","Profile","balance","handlePanels","logOut","joinGame","TopUp","amount","handleAmount","style","display","privatekey","handleKey","topUp","CashOut","coinbase","handleAddress","cashOut","Chat","messagesEndRef","React","createRef","scrollToBottom","current","scrollIntoView","behavior","position","left","bottom","textAlign","overflow","overflowWrap","messageList","map","o","sender","message","color","colors","timestring","ref","chatMessage","handleChat","onKeyPress","sendMessage","getWeb3","Promise","resolve","reject","addEventListener","results","web3","Web3","currentProvider","provider","providers","HttpProvider","serverURL","socket","openSocket","abi","Home","currentUser","sessionId","privateKey","userCount","spent","forcePop","currentPanel","Date","getUTCMilliseconds","colorIndex","boomMsgList","getBalance","handleMessageBox","quitGame","that","count","boomMsg","setTimeout","boomMsgList1","pop","msg","length","t_msg","toLocaleDateString","predate","messages","then","eth","getAccounts","accounts","localStorage","getItem","cb","k","substr","pKey","privateKeyToAccount","wallet","catch","fetch","method","headers","JSON","stringify","response","json","data","status","show","err","userhash","utils","soliditySha3","document","location","reload","a","ethers","getDefaultProvider","contract","Contract","PlayerBalances","currentValue","formatEther","Number","toFixed","success","fontSize","positions","MIDDLE","emit","BOTTOM_RIGHT","mainContract","ethereum","request","account","parseEther","toString","overrides","gasLimit","from","thisObj","methods","deposit","send","res","val","profilePanels","backgroundImage","top","borderRadius","margin","padding","right","App","Route","exact","path","render","Boolean","hostname","match","ReactDOM","template","AlertTemplate","timeout","offset","transition","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3eb506b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Phaser from 'phaser';\r\nimport './App.css';\r\nimport getRandomInt from './utils';\r\n\r\nvar game;\r\nvar balloonCount = getRandomInt(3,5);\r\nvar balloonsDirection = [];\r\n\r\nclass GameScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      game: null,\r\n    }\r\n\r\n    //this.create = this.create.bind(this);\r\n  }\r\n\r\n  preload() {\r\n    this.load.image('background', './phaser/Background.png');\r\n    //this.load.image('balloon', './phaser/Balloon Pop.png');\r\n    this.load.spritesheet('balloon',\r\n      './phaser/Balloon Pop.png',\r\n      { frameWidth: 390, frameHeight: 481 }\r\n    );\r\n    this.load.image('cloudBack', './phaser/Clouds_03_Back.png');\r\n    this.load.image('cloudMid', './phaser/Clouds_02_Middle.png');\r\n    this.load.image('cloudFront', './phaser/Clouds_01_Front.png');\r\n  }\r\n\r\n  create() {\r\n    //console.log(game);\r\n    //game.stage.backgroundColor = \"#4488AA\";\r\n\r\n\r\n\r\n    let bg = this.add.sprite(0, 0, 'background');\r\n    bg.displayWidth = window.innerWidth;\r\n    bg.displayHeight = window.innerHeight;\r\n    bg.setOrigin(0, 0);\r\n\r\n    this.cloudBack = this.add.tileSprite(window.innerWidth / 2, window.innerHeight / 2, window.innerWidth, window.innerHeight, 'cloudBack');\r\n    this.cloudBack.setScale(1);\r\n    this.cloudBack.tileScaleX = 0.5;\r\n    this.cloudBack.tileScaleY = 0.6;\r\n\r\n    this.cloudMid = this.add.tileSprite(window.innerWidth / 2, window.innerHeight / 2, window.innerWidth, window.innerHeight, 'cloudMid');\r\n    this.cloudMid.setScale(1);\r\n    this.cloudMid.tileScaleX = 0.5;\r\n    this.cloudMid.tileScaleY = 0.6;\r\n\r\n    this.cloudFront = this.add.tileSprite(window.innerWidth / 2, window.innerHeight / 2, window.innerWidth, window.innerHeight, 'cloudFront');\r\n    this.cloudFront.setScale(1);\r\n    this.cloudFront.tileScaleX = 0.5;\r\n    this.cloudFront.tileScaleY = 0.6;\r\n\r\n    let balloons = [];\r\n\r\n    this.anims.create({\r\n      key: 'idle',\r\n      frames: this.anims.generateFrameNumbers('balloon', { start: 0, end: 0 }),\r\n      frameRate: 64\r\n      //repeat: -1\r\n    });\r\n\r\n    this.anims.create({\r\n      key: 'pop',\r\n      frames: this.anims.generateFrameNumbers('balloon', { start: 0, end: 16 }),\r\n      frameRate: 96\r\n      //repeat: -1\r\n    });\r\n\r\n    for (let i = 0; i < balloonCount; i++) {\r\n      let balloon = this.physics.add.sprite((Math.random() / 6 * (i + 1) + 0.2) * window.innerWidth, window.innerHeight + (300 * i), 'balloon', { ignoreGravity: false }).setInteractive();\r\n      balloons.push(balloon);\r\n      balloons[i].displayWidth = 140;\r\n      balloons[i].displayHeight = 200;\r\n\r\n      let speedX = 400 + Math.random() * 200;\r\n      let speedY = - 1 * (300 + Math.random() * 200);\r\n      // balloons[i].body.maxVelocity = { x: speedX, y: speedY };\r\n      balloons[i].body.allowGravity = false;\r\n      balloons[i].setBounce(0, 0);\r\n      balloons[i].setAcceleration(0, 0);\r\n      balloons[i].setCollideWorldBounds(false);\r\n      balloons[i].body.setGravityY(0);\r\n      balloons[i].setVelocity(speedX, speedY);\r\n      balloons[i].body.angularVelocity = 250 + Math.random() * 100;\r\n      balloons[i].body.angularDrag = 0;\r\n      balloons[i].on('pointerdown', function (e) {\r\n        let p = e.downElement.closest(\".Chat\");\r\n        if(p !== null)\r\n          return;\r\n        if (game.started) {\r\n          game.clickBalloon();\r\n        }\r\n        balloons[i].anims.play(\"pop\", true);\r\n        balloons[i].on('animationcomplete', (animation, frame) => {\r\n          if (animation.key == \"pop\") {\r\n            balloons[i].x = (Math.random() / 6 * (i + 1) + 0.2) * window.innerWidth;\r\n            balloons[i].y = window.innerHeight;\r\n            balloons[i].anims.play(\"idle\", true);\r\n            balloonsDirection[i] = balloonsDirection[i] * -1;\r\n          }\r\n        }, this);\r\n      });\r\n\r\n      balloonsDirection.push(Math.pow(-1, i));\r\n    }\r\n    this.balloons = balloons;\r\n  }\r\n\r\n\r\n  update() {\r\n    this.cloudBack.tilePositionX -= 0.15;\r\n    this.cloudMid.tilePositionX += 0.3;\r\n    this.cloudFront.tilePositionX -= 0.75;\r\n\r\n    for (let i = 0; i < balloonCount; i++) {\r\n      if (this.balloons[i].x < 0) {\r\n        this.balloons[i].x = window.innerWidth;\r\n      }\r\n      else if (this.balloons[i].x > window.innerWidth) {\r\n        this.balloons[i].x = 0;\r\n      }\r\n      if (this.balloons[i].y < 0) {\r\n        this.balloons[i].y = window.innerHeight;\r\n        this.balloons[i].x = (Math.random() / 6 * (i + 1) + 0.2) * window.innerWidth;\r\n        balloonsDirection[i] = balloonsDirection[i] * -1;\r\n      }\r\n      /* else if (this.balloons[i].y > window.innerHeight) {\r\n        this.balloons[i].y = 0;\r\n      } */\r\n      let speedX = 100 + Math.random() * 200;\r\n      let speedY = - 1 * (150 + Math.random() * 200);\r\n      this.balloons[i].setVelocity(speedX * balloonsDirection[i], speedY);\r\n    }\r\n  }\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    game.clickBalloon = nextProps.clickBalloon;\r\n    game.started = nextProps.gameStarted;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let gameScene = new Phaser.Scene(game);\r\n    var config = {\r\n      type: Phaser.AUTO,\r\n      parent: 'phaser-parent',\r\n      pixelArt: false,\r\n      backgroundColor: 'rgba(176, 55, 110,0.5)',\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n          gravity: { y: 200 },\r\n          debug: false\r\n        }\r\n      },\r\n      scene: {\r\n        preload: this.preload,\r\n        create: this.create,\r\n        update: this.update\r\n      }\r\n    };\r\n    game = new Phaser.Game(config);\r\n    console.log(game)\r\n    game.clickBalloon = this.props.clickBalloon;\r\n    game.started = this.props.gameStarted;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"phaser-parent\">\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameScreen;\r\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","let getRandomInt = (min, max)=>{\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nlet getTimeString = (date) => {\r\n    return date.toLocaleTimeString();\r\n    return (date.getHours()+1).toString().padStart(2,'0')+':'+(date.getMinutes()).toString().padStart(2,'0');\r\n}\r\nexport default getRandomInt;\r\nexport { getTimeString };","import React, { Component } from 'react';\r\nimport { positions, withAlert } from 'react-alert'\r\nimport './App.css';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      email: \"\",\r\n      isLogin: false,\r\n      isRegister: false,\r\n    };\r\n    this.handleUsername = this.handleUsername.bind(this);\r\n    this.handlePassword = this.handlePassword.bind(this);\r\n    this.handleEmail = this.handleEmail.bind(this);\r\n\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n    //this.create = this.create.bind(this);\r\n  }\r\n\r\n  handleUsername(event) {\r\n    this.setState({ username: event.target.value })\r\n  }\r\n\r\n  handlePassword(event) {\r\n    this.setState({ password: event.target.value })\r\n  }\r\n\r\n  handleEmail(event) {\r\n    this.setState({ email: event.target.value })\r\n  }\r\n\r\n  handleLogin() {\r\n    if (this.state.isLogin) {\r\n      if(this.state.username == \"\")\r\n      {\r\n        this.props.alert.error(\"Input username\");\r\n        return;\r\n      }\r\n      this.props.login(this.state.username, this.state.password);\r\n    }\r\n    else {\r\n      this.setState({ isLogin: true });\r\n    }\r\n  }\r\n\r\n  handleBack() {\r\n    this.setState({ isLogin: false, isRegister: false });\r\n  }\r\n\r\n  handleRegister() {\r\n    if (this.state.isRegister) {\r\n      if(this.state.username == \"\")\r\n      {\r\n        this.props.alert.error(\"Input username\");\r\n        return;\r\n      }\r\n      this.props.register(this.state.username, this.state.email, this.state.password);\r\n    }\r\n    else {\r\n      this.setState({ isRegister: true });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        { (this.state.isLogin || this.state.isRegister) &&\r\n          <>\r\n            <p>Username</p>\r\n            <input value={this.state.username} onChange={this.handleUsername} />\r\n            <br />\r\n            {this.state.isRegister && (\r\n              <>\r\n                <p>Email</p>\r\n                <input value={this.state.email} onChange={this.handleEmail} />\r\n                <br />\r\n              </>)\r\n            }\r\n            <p>Password</p>\r\n            <input type=\"password\" value={this.state.password} onChange={this.handlePassword} />\r\n            <br /><br />\r\n          </>\r\n        }\r\n        { (this.state.isRegister || this.state.isLogin) &&\r\n          <>\r\n            <button className=\"midnight-blue-flat-button\" onClick={this.handleBack}>BACK</button>\r\n            <div className=\"divider\" />\r\n          </>\r\n        }\r\n        { !this.state.isRegister &&\r\n          <>\r\n            <button className=\"midnight-blue-flat-button\" onClick={this.handleLogin}>LOGIN</button>\r\n            <div className=\"divider\" />\r\n          </>\r\n        }\r\n        { !this.state.isLogin &&\r\n          <button className=\"midnight-blue-flat-button\" onClick={this.handleRegister}>REGISTER</button>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAlert()(Login);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass Profile extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n\r\n        <p>Welcome {this.props.username}!</p>\r\n        <p>Current Balance:</p>\r\n        <h2>{this.props.balance}uETH</h2>\r\n\r\n        <button onClick={() => this.props.handlePanels(1)} className=\"midnight-blue-flat-button\">Top Up</button>\r\n        <div className=\"divider\" />\r\n        {this.props.balance > 0 &&\r\n          <button onClick={() => this.props.handlePanels(2)} className=\"midnight-blue-flat-button\">Cash Out</button>\r\n        }\r\n        <br /><br /><br /><br />\r\n        <button onClick={this.props.logOut} className=\"midnight-blue-flat-button\">Quit</button>\r\n        <div className=\"divider\" />\r\n        <button onClick={this.props.joinGame} className=\"midnight-blue-flat-button\">JOIN GAME</button>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass TopUp extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n\r\n        <p>Welcome {this.props.username}!</p>\r\n        <p>Current Balance: {this.props.balance}</p>\r\n        <br/><br/>\r\n        <p>Amount</p>\r\n        <input value={this.props.amount} onChange={this.props.handleAmount} type=\"number\"/>\r\n        <br/><br/>\r\n        <p style={{display: \"none\"}}>Private Key</p>\r\n        <input value={this.props.privatekey} onChange={this.props.handleKey} style={{width: \"100%\",display: \"none\"}}/>\r\n        <br/><br/>\r\n        <button onClick={() => this.props.handlePanels(0)} className=\"midnight-blue-flat-button\">Back</button>\r\n        <div className=\"divider\"/>\r\n        <button onClick={this.props.topUp} className=\"midnight-blue-flat-button\">Top Up</button>\r\n        <br/><br/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopUp;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass CashOut extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n\r\n        <p>Welcome {this.props.username}!</p>\r\n        <p>Current Balance: {this.props.balance}</p>\r\n        <br/><br/>\r\n        <p>Amount</p>\r\n        <input value={this.props.amount} onChange={this.props.handleAmount} type=\"number\"/>\r\n        <br/><br/>\r\n        <p>Receiving Address</p>\r\n        <input value={this.props.coinbase} onChange={this.props.handleAddress}/>\r\n        <br/><br/>\r\n        <button onClick={() => this.props.handlePanels(0)} className=\"midnight-blue-flat-button\">Back</button>\r\n        <div className=\"divider\"/>\r\n        <button onClick={this.props.cashOut} className=\"midnight-blue-flat-button\">Cash Out</button>\r\n        <br/><br/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CashOut;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messagesEndRef: React.createRef()\r\n    };\r\n    this.scrollToBottom = this.scrollToBottom.bind(this);\r\n  }\r\n  componentDidMount (){\r\n    this.scrollToBottom();\r\n  }\r\n  componentDidUpdate (){\r\n    this.scrollToBottom();\r\n  }\r\n  scrollToBottom () {\r\n    this.state.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Chat\" style={{position: \"absolute\", left: \"0px\", bottom: \"0px\", backgroundColor: \"#00000052\", width: \"350px\"}}>\r\n\r\n        <div style={{height: \"300px\", textAlign: \"left\", overflow: \"auto\", overflowWrap: \"break-word\"}}>\r\n          { this.props.messageList.map((o) => {\r\n                if(o.sender == 'date-separator')\r\n                  return (<div style={{ textAlign:'center' }}>----------{o.message}----------</div>)\r\n                else\r\n                  return(<div className='message-div' style={{ color: this.props.colors[o.color]}}>{o.sender}: {o.message} <div className='date'>{o.timestring}</div></div>)\r\n              }\r\n            )\r\n          }\r\n          <div ref={this.state.messagesEndRef} />\r\n        </div>\r\n        <input\r\n        value={this.props.chatMessage}\r\n        onChange={this.props.handleChat}\r\n        onKeyPress ={(e) => {if(e.key === 'Enter') this.props.sendMessage()}}\r\n        style={{position: \"relative\", bottom: \"0px\", width: \"85%\"}}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","import Web3 from 'web3'\r\n\r\nlet getWeb3 = new Promise(function(resolve, reject) {\r\n  // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n  window.addEventListener('load', function() {\r\n    var results = {};\r\n    var web3 = window.web3\r\n\r\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\r\n    if (typeof web3 !== 'undefined') {\r\n      // Use Mist/MetaMask's provider.\r\n      web3 = new Web3(web3.currentProvider)\r\n      results.web3 = web3;\r\n      console.log('Injected web3 detected.');\r\n      resolve(results)\r\n    } else {\r\n      // Fallback to localhost if no web3 injection. We've configured this to infura\r\n      var provider = new Web3.providers.HttpProvider('http://ropsten.infura.io/vKci4bjCOf3x7jLLQRWs')\r\n      web3 = new Web3(provider)\r\n      results.web3 = web3;\r\n      console.log('No web3 instance injected, using Local web3.');\r\n      resolve(results)\r\n      }\r\n  })\r\n});\r\n\r\nexport default getWeb3\r\n","import React, { Component } from 'react';\r\nimport { positions, withAlert } from 'react-alert'\r\nimport GameScreen from './GameScreen';\r\nimport Login from './Login';\r\nimport Profile from './Profile';\r\nimport TopUp from './TopUp';\r\nimport CashOut from './CashOut';\r\nimport Chat from './Chat'\r\nimport './App.css';\r\nimport getWeb3 from './getWeb3';\r\nimport { ethers } from 'ethers';\r\nimport openSocket from 'socket.io-client';\r\nimport getRandomInt from './utils';\r\nimport { getTimeString } from './utils';\r\nconst serverURL = \"http://localhost:5001/\"// local dev\r\n//const serverURL = \"http://cryptopop.fun:5001/\"// server deploy\r\nconst socket = openSocket(serverURL);//, {transports: ['websocket', 'polling'], secure: false});\r\n\r\n\r\nconst abi = [{ \"constant\": false, \"inputs\": [{ \"name\": \"amount\", \"type\": \"uint256\" }, { \"name\": \"user\", \"type\": \"bytes32\" }, { \"name\": \"userAddress\", \"type\": \"address\" }, { \"name\": \"newBalance\", \"type\": \"uint256\" }], \"name\": \"withdraw\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"\", \"type\": \"bytes32\" }], \"name\": \"PlayerBalances\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"sender\", \"type\": \"address\" }], \"name\": \"changeAdmin\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"user\", \"type\": \"bytes32\" }], \"name\": \"deposit\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"admin\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"constructor\" }];\r\n\r\nconst colors = ['#f72585', '#b5179e', '#7209b7', '#560bad', '#480ca8', '#ffadad', '#57cc99', '#80ed99', '#ff0a54', '#ff477e', '#ff5c8a', '#004b23', '#006400', '#007200', '#38b000', '#ff7b00', '#ff9500', '#ffb700'];\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      web3: null,\r\n      currentUser: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      sessionId: \"\",\r\n      coinbase: \"\",\r\n      privateKey: \"\",\r\n      key: null,\r\n      userCount: 0,\r\n      balance: 0,\r\n      spent: 0,\r\n      gameStarted: false,\r\n      forcePop: false,\r\n      currentPanel: 0,\r\n      amount: 0,\r\n      messageList: [{ sender: \"GM\", message: \"Welcome to Balloon Game!\", date: new Date().getUTCMilliseconds(), timestring: getTimeString(new Date()) }],\r\n      chatMessage: \"\",\r\n      colorIndex: 0,\r\n      boomMsgList: []\r\n    }\r\n\r\n    this.login = this.login.bind(this)\r\n    this.logOut = this.logOut.bind(this)\r\n    this.register = this.register.bind(this)\r\n    this.getBalance = this.getBalance.bind(this)\r\n    this.handlePanels = this.handlePanels.bind(this)\r\n    this.handleKey = this.handleKey.bind(this)\r\n    this.handleAmount = this.handleAmount.bind(this)\r\n    this.handleAddress = this.handleAddress.bind(this)\r\n    this.handleMessageBox = this.handleMessageBox.bind(this)\r\n    this.joinGame = this.joinGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.sendMessage = this.sendMessage.bind(this)\r\n    this.topUp = this.topUp.bind(this)\r\n    this.cashOut = this.cashOut.bind(this)\r\n    this.clickBalloon = this.clickBalloon.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    var that = this;\r\n\r\n    socket.on('connect', function () {\r\n      console.log(\"connected\")\r\n      that.setState({ sessionId: socket.id })\r\n    });\r\n    socket.on(\"ADD\", message => {\r\n      console.log(message);\r\n      that.setState({ userCount: message.count });\r\n    });\r\n    socket.on(\"POP\", message => {\r\n      console.log(message);\r\n      that.setState({ forcePop: true });\r\n    });\r\n    socket.on(\"CheckBalance\", message => {\r\n      console.log(message);\r\n      that.getBalance();\r\n    });\r\n    socket.on(\"CHAT\", message => {\r\n      if (message.message === \"I won.\" && message.sender !== this.state.username) {\r\n        /* this.props.alert.success(<div style={{ fontSize: '1.5em', wordBreak: 'break-all' }}>{message.sender} won +100.</div>, {\r\n          position: positions.MIDDLE\r\n        }); */\r\n        var boomMsg = message.sender + \": Just won +100\";\r\n        var that = this;\r\n        var boomMsgList = this.state.boomMsgList;\r\n        boomMsgList.push(boomMsg);\r\n        this.setState({ boomMsgList: boomMsgList });\r\n        console.log(this.state.boomMsgList);\r\n        setTimeout(function () {\r\n          var boomMsgList1 = that.state.boomMsgList;\r\n          boomMsgList1.pop();\r\n          that.setState({ boomMsgList: boomMsgList1 });\r\n        }, 5000);\r\n      }\r\n      if (message.message === \"I won.\") {\r\n        message.message = 'I just won +100.';\r\n      }\r\n\r\n      var msg = this.state.messageList;\r\n\r\n      var date = new Date(message.date);\r\n\r\n      if (msg.length == 1) {\r\n        var t_msg = { sender: 'date-separator', date: message.date, message: date.toLocaleDateString() };\r\n        msg.push(t_msg);\r\n      }\r\n      else {\r\n        var predate = new Date(msg[msg.length - 1].date);\r\n        if (date.toLocaleDateString() != predate.toLocaleDateString()) {\r\n          var t_msg = { sender: 'date-separator', date: message.date, message: date.toLocaleDateString() };\r\n          msg.push(t_msg);\r\n        }\r\n      }\r\n\r\n      msg.push({ sender: message.sender, message: message.message, color: message.color, date: message.date, timestring: getTimeString(date) });\r\n      this.setState({ messageList: msg });\r\n    });\r\n    socket.on(\"HISTORY\", messages => {\r\n      var msg = that.state.messageList;\r\n      if (msg.length > 1)\r\n        return;\r\n      for (var i = 0; i < messages.length; i++) {\r\n        var message = messages[i];\r\n        var date = new Date(message.date);\r\n        if (i == 0) {\r\n          var t_msg = { sender: 'date-separator', date: message.date, message: date.toLocaleDateString() };\r\n          msg.push(t_msg);\r\n        }\r\n        else {\r\n          var predate = new Date(messages[i - 1].date);\r\n          if (date.toLocaleDateString() != predate.toLocaleDateString()) {\r\n            var t_msg = { sender: 'date-separator', date: message.date, message: date.toLocaleDateString() };\r\n            msg.push(t_msg);\r\n          }\r\n        }\r\n        if (message.message === 'I won.') {\r\n          message.message = 'I just won +100.';\r\n        }\r\n        if (message.message !== \"I won.\") {\r\n          msg.push({ sender: message.sender, message: message.message, color: message.color, date: message.date, timestring: getTimeString(date) });\r\n        }\r\n      }\r\n      that.setState({ messageList: msg });\r\n    });\r\n\r\n    getWeb3.then(results => {\r\n      this.setState({ web3: results.web3 })\r\n      var that = this;\r\n      results.web3.eth.getAccounts((error, accounts) => {\r\n        if (accounts && accounts.length != 0) {\r\n          this.setState({ coinbase: accounts[0] })\r\n        }\r\n        if (localStorage.getItem('defaultWallet') && localStorage.getItem('defaultWallet').length > 30) {\r\n          var cb = localStorage.getItem('defaultWallet');\r\n          var k = localStorage.getItem('defaultKey')\r\n          if (k.length > 32) {\r\n            k = k.substr(2, k.length - 1)\r\n          }\r\n          this.setState({ coinbase: cb, pKey: k });\r\n          let x = results.web3.eth.accounts.privateKeyToAccount(localStorage.getItem('defaultKey'));\r\n          //console.log(results.web3.eth.accounts.wallet.add(x));\r\n          console.log(x)\r\n          console.log(results.web3.eth.accounts.wallet)\r\n        }\r\n      }).catch(() => { console.log('Error finding web3.') });\r\n    });\r\n\r\n    this.setState({ colorIndex: getRandomInt(0, colors.length) });\r\n  }\r\n\r\n  register(username, email, password) {\r\n    console.log(\"Registering...\")\r\n    fetch(serverURL + 'register/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": username,\r\n          \"email\": email,\r\n          \"password\": password\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.login(username, password);\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  login(username, password) {\r\n    fetch(serverURL + 'login/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        //mode: \"no-cors\",\r\n        body: JSON.stringify({\r\n          \"username\": username,\r\n          \"password\": password,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          var userhash = this.state.web3.utils.soliditySha3(username);\r\n          this.setState({ currentUser: userhash, username: username, password: password }, function () {\r\n            this.getBalance();\r\n          });\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  logOut() {\r\n    document.location.reload();\r\n  }\r\n\r\n  async getBalance() {\r\n    let provider = ethers.getDefaultProvider('ropsten');\r\n    let contract = new ethers.Contract(\"0x7Af6faCB28061cFEb5f7D6538B4d63988C8AeE66\", abi, provider);\r\n    let currentValue = await contract.PlayerBalances(this.state.currentUser);\r\n    console.log(ethers.utils.formatEther(currentValue) * 10000)\r\n    this.setState({ balance: Number((ethers.utils.formatEther(currentValue) * 10000).toFixed(0)) })\r\n\r\n    fetch(serverURL + 'balances/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          console.log(data.status)\r\n        }\r\n        else {\r\n          console.log(data.spent)\r\n          this.setState({ spent: Number(data.spent) });\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n\r\n  }\r\n\r\n  clickBalloon() {\r\n    console.log(\"CLICKED\")\r\n    fetch(serverURL + 'click/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"key\": this.state.key,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status == \"Winner\") {\r\n          this.props.alert.success(<div style={{ fontSize: '2em' }}>+100</div>, {\r\n            position: positions.MIDDLE\r\n          });\r\n          this.setState({ spent: this.state.spent + 100 });\r\n          socket.emit(\"CHAT\", { sender: this.state.username, message: \"I won.\", color: this.state.colorIndex });\r\n        }\r\n        else if (data.status == \"Loser\") {\r\n          this.props.alert.show(\"-10\", {\r\n            position: positions.BOTTOM_RIGHT\r\n          });\r\n          this.setState({ spent: this.state.spent - 10 });\r\n        }\r\n        else {\r\n          this.props.alert.show(data.status)\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  joinGame() {\r\n    fetch(serverURL + 'joinGame/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"key\": this.state.key,\r\n          \"sessionId\": this.state.sessionId\r\n\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.setState({ key: data.key, gameStarted: true });\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  async topUp() {\r\n    //if(key.substr(0,2) != \"0x\")\r\n    //key = \"0x\" + this.state.privateKey;\r\n    let mainContract = new this.state.web3.eth.Contract(abi, \"0x7Af6faCB28061cFEb5f7D6538B4d63988C8AeE66\");\r\n    let account = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n    let chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n    if (chainId != 3) {\r\n      this.props.alert.error(\"Wrong network\");\r\n      return;\r\n    }\r\n    let amount = ethers.utils.parseEther(this.state.amount).toString();\r\n    let overrides = {\r\n      gasLimit: 53000,\r\n      from: account[0],\r\n      value: amount,\r\n    };\r\n    let thisObj = this;\r\n    mainContract.methods.deposit(this.state.currentUser).send(overrides).on('transactionHash', function () {\r\n      thisObj.props.alert.show(\"Please Await Transaction\")\r\n      thisObj.setState({ currentPanel: 0 })\r\n    })\r\n      .on('receipt', (res) => {\r\n        thisObj.props.alert.show(\"Deposit Confirmed\")\r\n        thisObj.getBalance()\r\n      });\r\n    return;\r\n  }\r\n\r\n  cashOut() {\r\n    fetch(serverURL + 'withdraw/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"key\": this.state.key,\r\n          \"username\": this.state.currentUser,\r\n          \"password\": this.state.password,\r\n          \"address\": this.state.coinbase,\r\n          \"sessionId\": this.state.sessionId,\r\n          \"amount\": this.state.amount\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.props.alert.show(\"Withdrawal Confirmed\")\r\n          this.setState({ currentPanel: 0 })\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  quitGame() {\r\n    fetch(serverURL + 'quitGame/',\r\n      {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"username\": this.state.currentUser,\r\n          \"key\": this.state.key,\r\n          \"sessionId\": this.state.sessionId\r\n        })\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != \"Ok\") {\r\n          this.props.alert.show(data.status)\r\n        }\r\n        else {\r\n          this.setState({ gameStarted: false });\r\n          this.getBalance();\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  sendMessage() {\r\n    var sender = (this.state.username == \"\" ? \"Guest\" : this.state.username);\r\n    socket.emit(\"CHAT\", { sender: sender, message: this.state.chatMessage, color: this.state.colorIndex })\r\n    this.setState({ chatMessage: \"\" })\r\n  }\r\n\r\n  handleMessageBox(event) {\r\n    this.setState({ chatMessage: event.target.value })\r\n  }\r\n\r\n  handlePanels(val) {\r\n    this.setState({ currentPanel: val })\r\n  }\r\n\r\n  handleKey(event) {\r\n    this.setState({ privateKey: event.target.value })\r\n  }\r\n\r\n  handleAmount(event) {\r\n    this.setState({ amount: event.target.value })\r\n  }\r\n\r\n  handleAddress(event) {\r\n    this.setState({ coinbase: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const profilePanels = [\r\n      <Profile\r\n        joinGame={this.joinGame}\r\n        logOut={this.logOut}\r\n        username={this.state.username}\r\n        balance={this.state.balance + this.state.spent}\r\n        handlePanels={this.handlePanels}\r\n      />,\r\n      <TopUp\r\n        joinGame={this.joinGame}\r\n        username={this.state.username}\r\n        balance={this.state.balance + this.state.spent}\r\n        handlePanels={this.handlePanels}\r\n        handleAmount={this.handleAmount}\r\n        amount={this.state.amount}\r\n        privateKey={this.state.privateKey}\r\n        handleKey={this.handleKey}\r\n        topUp={this.topUp}\r\n      />,\r\n      <CashOut\r\n        joinGame={this.joinGame}\r\n        username={this.state.username}\r\n        balance={this.state.balance + this.state.spent}\r\n        handlePanels={this.handlePanels}\r\n        coinbase={this.state.coinbase}\r\n        handleAmount={this.handleAmount}\r\n        handleAddress={this.handleAddress}\r\n        amount={this.state.amount}\r\n        cashOut={this.cashOut}\r\n      />\r\n    ]\r\n    return (\r\n      <div className=\"Home\">\r\n        {this.state.boomMsgList.length > 0 &&\r\n          <div className='boom-message-list'>\r\n            <div>\r\n              <div>\r\n                {this.state.boomMsgList.map((boomMsg) => {\r\n                  return (\r\n                    <div>\r\n                      <div className='boom-message' style={{ backgroundImage: 'url(/images/boom.png)' }}>\r\n                        {boomMsg}\r\n                      </div>\r\n                    </div>);\r\n                })\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n        <div className=\"Panel\">\r\n          <h1>Balloon Game</h1>\r\n          {this.state.currentUser == \"\" ? <Login login={this.login} register={this.register} /> : (this.state.gameStarted ? null : profilePanels[this.state.currentPanel])}\r\n        </div>\r\n        {\r\n          this.state.gameStarted &&\r\n          <Chat messageList={this.state.messageList} chatMessage={this.state.chatMessage} handleChat={this.handleMessageBox} sendMessage={this.sendMessage} colors={colors} />\r\n        }\r\n        <GameScreen userCount={this.state.userCount} clickBalloon={this.clickBalloon} gameStarted={this.state.gameStarted} />\r\n        <div style={{ position: \"absolute\", left: \"0px\", top: \"0px\", backgroundColor: \"#00000052\", borderRadius: \"5px\", margin: \"10px\", color: \"white\", padding: \"5px\" }}>\r\n          <h1>{this.state.userCount}</h1>\r\n        Players</div>\r\n        <div style={{ position: \"absolute\", right: \"0px\", top: \"0px\", backgroundColor: \"#00000052\", borderRadius: \"5px\", margin: \"10px\", color: \"white\", padding: \"5px\" }}>\r\n          Balance\r\n        <h1>{this.state.balance + this.state.spent}</h1></div>\r\n        {this.state.gameStarted ?\r\n          <div onClick={this.quitGame} style={{ position: \"absolute\", right: \"0px\", bottom: \"0px\", backgroundColor: \"#00000052\", borderRadius: \"5px\", margin: \"10px\", color: \"white\", padding: \"5px\" }}>\r\n            Quit Game</div>\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAlert()(Home);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Home.js';\nimport GameScreen from './GameScreen.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Router>\n      <div>\n        <Route exact path='/' render={(props) => <Home {...props}\n        />}/>\n        <Route path='/exchange' render={(props) => <GameScreen {...props}\n        /> }/>\n        </div>\n      </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport * as serviceWorker from './serviceWorker';\n\nconst options = {\n  position: 'bottom center',\n  timeout: 5000,\n  offset: '30px',\n  transition: 'fade',\n}\n\nReactDOM.render(<AlertProvider template={AlertTemplate} {...options}><App /></AlertProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}